

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Dec 17 02:49:31 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F23K22 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	nvCOMRAM
    83  000057                     __pnvCOMRAM:
    84                           	opt callstack 0
    85  000057                     _TMR0_InterruptHandler:
    86                           	opt callstack 0
    87  000057                     	ds	2
    88  000059                     _MBID:
    89                           	opt callstack 0
    90  000059                     	ds	1
    91  00005A                     _eusart1TxBufferRemaining:
    92                           	opt callstack 0
    93  00005A                     	ds	1
    94  00005B                     _timer0ReloadVal:
    95                           	opt callstack 0
    96  00005B                     	ds	1
    97  0000                     _ANSELA	set	3896
    98  0000                     _ANSELB	set	3897
    99  0000                     _ANSELC	set	3898
   100  0000                     _LATAbits	set	3977
   101  0000                     _PORTBbits	set	3969
   102  0000                     _LATBbits	set	3978
   103  0000                     _TXREG1	set	4013
   104  0000                     _SPBRGH1	set	4016
   105  0000                     _SPBRG1	set	4015
   106  0000                     _TXSTA1	set	4012
   107  0000                     _RCSTA1	set	4011
   108  0000                     _BAUDCON1	set	4024
   109  0000                     _PIE1bits	set	3997
   110  0000                     _INTCON2bits	set	4081
   111  0000                     _WPUB	set	3937
   112  0000                     _TRISC	set	3988
   113  0000                     _TRISB	set	3987
   114  0000                     _TRISA	set	3986
   115  0000                     _LATC	set	3979
   116  0000                     _LATB	set	3978
   117  0000                     _LATA	set	3977
   118  0000                     _OSCTUNE	set	3995
   119  0000                     _OSCCON2	set	4050
   120  0000                     _OSCCON	set	4051
   121  0000                     _RCONbits	set	4048
   122  0000                     _T0CON	set	4053
   123  0000                     _INTCONbits	set	4082
   124  0000                     _TMR0L	set	4054
   125  0000                     _TMR0H	set	4055
   126                           
   127                           ; #config settings
   128  0000                     
   129                           	psect	cinit
   130  000478                     __pcinit:
   131                           	opt callstack 0
   132  000478                     start_initialization:
   133                           	opt callstack 0
   134  000478                     __initialization:
   135                           	opt callstack 0
   136                           
   137                           ; Clear objects allocated to BANK0 (88 bytes)
   138  000478  EE00  F060         	lfsr	0,__pbssBANK0
   139  00047C  0E58               	movlw	88
   140  00047E                     clear_0:
   141  00047E  6AEE               	clrf	postinc0,c
   142  000480  06E8               	decf	wreg,f,c
   143  000482  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to COMRAM (56 bytes)
   146  000484  EE00  F001         	lfsr	0,__pbssCOMRAM
   147  000488  0E38               	movlw	56
   148  00048A                     clear_1:
   149  00048A  6AEE               	clrf	postinc0,c
   150  00048C  06E8               	decf	wreg,f,c
   151  00048E  E1FD               	bnz	clear_1
   152  000490                     end_of_initialization:
   153                           	opt callstack 0
   154  000490                     __end_of__initialization:
   155                           	opt callstack 0
   156  000490  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   157  000492  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   158  000494  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  000496  6EF8               	movwf	tblptru,c
   160  000498  0100               	movlb	0
   161  00049A  EF96  F002         	goto	_main	;jump to C main() function
   162                           
   163                           	psect	bssCOMRAM
   164  000001                     __pbssCOMRAM:
   165                           	opt callstack 0
   166  000001                     _MB_ACK_buf:
   167                           	opt callstack 0
   168  000001                     	ds	16
   169  000011                     Modbus_Read@MB_D_time:
   170                           	opt callstack 0
   171  000011                     	ds	4
   172  000015                     _timecount:
   173                           	opt callstack 0
   174  000015                     	ds	4
   175  000019                     _EUSART1_ErrorHandler:
   176                           	opt callstack 0
   177  000019                     	ds	2
   178  00001B                     _EUSART1_OverrunErrorHandler:
   179                           	opt callstack 0
   180  00001B                     	ds	2
   181  00001D                     _EUSART1_FramingErrorHandler:
   182                           	opt callstack 0
   183  00001D                     	ds	2
   184  00001F                     _EUSART1_RxDefaultInterruptHandler:
   185                           	opt callstack 0
   186  00001F                     	ds	2
   187  000021                     _EUSART1_TxDefaultInterruptHandler:
   188                           	opt callstack 0
   189  000021                     	ds	2
   190  000023                     _CD4094Buffer:
   191                           	opt callstack 0
   192  000023                     	ds	1
   193  000024                     _CD4021Buffer:
   194                           	opt callstack 0
   195  000024                     	ds	1
   196  000025                     Modbus_Read@index:
   197                           	opt callstack 0
   198  000025                     	ds	1
   199  000026                     __4094_buf:
   200                           	opt callstack 0
   201  000026                     	ds	1
   202  000027                     _Tx_Tail:
   203                           	opt callstack 0
   204  000027                     	ds	1
   205  000028                     _Rx_Tail:
   206                           	opt callstack 0
   207  000028                     	ds	1
   208  000029                     _Tx_Head:
   209                           	opt callstack 0
   210  000029                     	ds	1
   211  00002A                     _Rx_Head:
   212                           	opt callstack 0
   213  00002A                     	ds	1
   214  00002B                     _eusart1RxLastError:
   215                           	opt callstack 0
   216  00002B                     	ds	1
   217  00002C                     _eusart1RxCount:
   218                           	opt callstack 0
   219  00002C                     	ds	1
   220  00002D                     _eusart1RxTail:
   221                           	opt callstack 0
   222  00002D                     	ds	1
   223  00002E                     _eusart1RxHead:
   224                           	opt callstack 0
   225  00002E                     	ds	1
   226  00002F                     _eusart1TxTail:
   227                           	opt callstack 0
   228  00002F                     	ds	1
   229  000030                     _eusart1TxHead:
   230                           	opt callstack 0
   231  000030                     	ds	1
   232  000031                     _HR:
   233                           	opt callstack 0
   234  000031                     	ds	8
   235                           
   236                           	psect	bssBANK0
   237  000060                     __pbssBANK0:
   238                           	opt callstack 0
   239  000060                     _Tx_CQ:
   240                           	opt callstack 0
   241  000060                     	ds	16
   242  000070                     _Rx_CQ:
   243                           	opt callstack 0
   244  000070                     	ds	16
   245  000080                     _eusart1RxStatusBuffer:
   246                           	opt callstack 0
   247  000080                     	ds	8
   248  000088                     _eusart1RxBuffer:
   249                           	opt callstack 0
   250  000088                     	ds	8
   251  000090                     _eusart1TxBuffer:
   252                           	opt callstack 0
   253  000090                     	ds	8
   254  000098                     _MB_CMD_Buffer:
   255                           	opt callstack 0
   256  000098                     	ds	32
   257                           
   258                           	psect	cstackCOMRAM
   259  000039                     __pcstackCOMRAM:
   260                           	opt callstack 0
   261  000039                     ??_INTERRUPT_InterruptManager:
   262  000039                     
   263                           ; 1 bytes @ 0x0
   264  000039                     	ds	2
   265  00003B                     ??_CD4094Driver:
   266  00003B                     ??_CD4021Driver:
   267  00003B                     ??_HR_handler:
   268  00003B                     Rx_deQ@data:
   269                           	opt callstack 0
   270  00003B                     Tx_deQ@data:
   271                           	opt callstack 0
   272  00003B                     Tx_enQ@data:
   273                           	opt callstack 0
   274  00003B                     CD4094Write8@Buffer:
   275                           	opt callstack 0
   276  00003B                     memset@p1:
   277                           	opt callstack 0
   278  00003B                     TMR0_SetInterruptHandler@InterruptHandler:
   279                           	opt callstack 0
   280  00003B                     Initial_Variable@i:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x2
   284  00003B                     	ds	1
   285  00003C                     EUSART1_Write@txData:
   286                           	opt callstack 0
   287  00003C                     CD4094Driver@temp:
   288                           	opt callstack 0
   289  00003C                     CD4021Driver@temp:
   290                           	opt callstack 0
   291  00003C                     memset@c:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x3
   295  00003C                     	ds	1
   296  00003D                     write_ACK@size:
   297                           	opt callstack 0
   298  00003D                     HR_handler@data:
   299                           	opt callstack 0
   300  00003D                     CD4094Driver@i:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x4
   304  00003D                     	ds	1
   305  00003E                     write_ACK@i:
   306                           	opt callstack 0
   307  00003E                     HR_handler@i:
   308                           	opt callstack 0
   309  00003E                     CD4021Driver@i:
   310                           	opt callstack 0
   311  00003E                     memset@n:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x5
   315  00003E                     	ds	2
   316  000040                     ??_DRIVER:
   317  000040                     memset@p:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x7
   321  000040                     	ds	1
   322  000041                     ??_HR_read:
   323  000041                     HR_single_write@addr:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x8
   327  000041                     	ds	2
   328  000043                     HR_single_write@i:
   329                           	opt callstack 0
   330  000043                     HR_read@n:
   331                           	opt callstack 0
   332                           
   333                           ; 2 bytes @ 0xA
   334  000043                     	ds	1
   335  000044                     HR_single_write@u:
   336                           	opt callstack 0
   337  000044                     DRIVER@_bit:
   338                           	opt callstack 0
   339                           
   340                           ; 8 bytes @ 0xB
   341  000044                     	ds	1
   342  000045                     HR_read@p:
   343                           	opt callstack 0
   344                           
   345                           ; 1 bytes @ 0xC
   346  000045                     	ds	1
   347  000046                     HR_read@i:
   348                           	opt callstack 0
   349                           
   350                           ; 1 bytes @ 0xD
   351  000046                     	ds	1
   352  000047                     HR_read@j:
   353                           	opt callstack 0
   354                           
   355                           ; 1 bytes @ 0xE
   356  000047                     	ds	1
   357  000048                     HR_read@u:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0xF
   361  000048                     	ds	2
   362  00004A                     ??_Modbus_Read:
   363  00004A                     
   364                           ; 1 bytes @ 0x11
   365  00004A                     	ds	2
   366  00004C                     DRIVER@CD4094DriveTimeCounter:
   367                           	opt callstack 0
   368                           
   369                           ; 4 bytes @ 0x13
   370  00004C                     	ds	4
   371  000050                     DRIVER@CD4021DriveTimeCounter:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x17
   375  000050                     	ds	4
   376  000054                     DRIVER@data:
   377                           	opt callstack 0
   378                           
   379                           ; 1 bytes @ 0x1B
   380  000054                     	ds	1
   381  000055                     DRIVER@i:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x1C
   385  000055                     	ds	2
   386  000057                     
   387                           ; 1 bytes @ 0x1E
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 75 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1
   407 ;;      Params:         0       0       0
   408 ;;      Locals:         0       0       0
   409 ;;      Temps:          0       0       0
   410 ;;      Totals:         0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels required when called:    9
   413 ;; This function calls:
   414 ;;		_DRIVER
   415 ;;		_EUSART1_Write_task
   416 ;;		_Initial_Variable
   417 ;;		_Modbus_Read
   418 ;;		_SYSTEM_Initialize
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text0
   425  00052C                     __ptext0:
   426                           	opt callstack 0
   427  00052C                     _main:
   428                           	opt callstack 22
   429                           
   430                           ;main.c: 78: SYSTEM_Initialize();
   431                           
   432                           ;incstack = 0
   433  00052C  ECA3  F002         	call	_SYSTEM_Initialize	;wreg free
   434                           
   435                           ; BSR set to: 15
   436                           ;main.c: 85: (INTCONbits.GIE = 1);
   437  000530  8EF2               	bsf	4082,7,c	;volatile
   438                           
   439                           ; BSR set to: 15
   440                           ;main.c: 91: (INTCONbits.PEIE = 1);
   441  000532  8CF2               	bsf	4082,6,c	;volatile
   442                           
   443                           ; BSR set to: 15
   444                           ;main.c: 95: Initial_Variable();
   445  000534  ECF9  F001         	call	_Initial_Variable	;wreg free
   446  000538                     l1677:
   447                           
   448                           ;main.c: 97: {;main.c: 99: Modbus_Read();
   449  000538  ECE1  F000         	call	_Modbus_Read	;wreg free
   450                           
   451                           ;main.c: 100: EUSART1_Write_task();
   452  00053C  ECCF  F002         	call	_EUSART1_Write_task	;wreg free
   453                           
   454                           ;main.c: 101: DRIVER();
   455  000540  EC16  F000         	call	_DRIVER	;wreg free
   456  000544  D7F9               	goto	l1677
   457  000546                     __end_of_main:
   458                           	opt callstack 0
   459                           
   460 ;; *************** function _SYSTEM_Initialize *****************
   461 ;; Defined at:
   462 ;;		line 50 in file "mcc_generated_files/mcc.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 3F/F
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1
   476 ;;      Params:         0       0       0
   477 ;;      Locals:         0       0       0
   478 ;;      Temps:          0       0       0
   479 ;;      Totals:         0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    5
   483 ;; This function calls:
   484 ;;		_EUSART1_Initialize
   485 ;;		_INTERRUPT_Initialize
   486 ;;		_OSCILLATOR_Initialize
   487 ;;		_PIN_MANAGER_Initialize
   488 ;;		_TMR0_Initialize
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text1
   495  000546                     __ptext1:
   496                           	opt callstack 0
   497  000546                     _SYSTEM_Initialize:
   498                           	opt callstack 25
   499                           
   500                           ;mcc.c: 53: INTERRUPT_Initialize();
   501                           
   502                           ;incstack = 0
   503  000546  EC06  F003         	call	_INTERRUPT_Initialize	;wreg free
   504                           
   505                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   506  00054A  EC11  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   507                           
   508                           ; BSR set to: 15
   509                           ;mcc.c: 55: OSCILLATOR_Initialize();
   510  00054E  ECE0  F002         	call	_OSCILLATOR_Initialize	;wreg free
   511                           
   512                           ; BSR set to: 15
   513                           ;mcc.c: 56: TMR0_Initialize();
   514  000552  EC74  F002         	call	_TMR0_Initialize	;wreg free
   515                           
   516                           ; BSR set to: 15
   517                           ;mcc.c: 57: EUSART1_Initialize();
   518  000556  ECDD  F001         	call	_EUSART1_Initialize	;wreg free
   519                           
   520                           ; BSR set to: 15
   521  00055A  0012               	return		;funcret
   522  00055C                     __end_of_SYSTEM_Initialize:
   523                           	opt callstack 0
   524                           
   525 ;; *************** function _TMR0_Initialize *****************
   526 ;; Defined at:
   527 ;;		line 68 in file "mcc_generated_files/tmr0.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 3F/F
   538 ;;		On exit  : 3F/F
   539 ;;		Unchanged: 3E/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1
   541 ;;      Params:         0       0       0
   542 ;;      Locals:         0       0       0
   543 ;;      Temps:          0       0       0
   544 ;;      Totals:         0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    4
   548 ;; This function calls:
   549 ;;		_TMR0_SetInterruptHandler
   550 ;; This function is called by:
   551 ;;		_SYSTEM_Initialize
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text2
   556  0004E8                     __ptext2:
   557                           	opt callstack 0
   558  0004E8                     _TMR0_Initialize:
   559                           	opt callstack 25
   560                           
   561                           ; BSR set to: 15
   562                           ;tmr0.c: 73: TMR0H = 0x00;
   563                           
   564                           ; BSR set to: 15
   565                           ;incstack = 0
   566  0004E8  0E00               	movlw	0
   567  0004EA  6ED7               	movwf	4055,c	;volatile
   568                           
   569                           ;tmr0.c: 76: TMR0L = 0x83;
   570  0004EC  0E83               	movlw	131
   571  0004EE  6ED6               	movwf	4054,c	;volatile
   572                           
   573                           ;tmr0.c: 80: timer0ReloadVal = 131;
   574  0004F0  0E83               	movlw	131
   575  0004F2  6E5B               	movwf	_timer0ReloadVal,c	;volatile
   576                           
   577                           ; BSR set to: 15
   578                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
   579  0004F4  94F2               	bcf	4082,2,c	;volatile
   580                           
   581                           ; BSR set to: 15
   582                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
   583  0004F6  8AF2               	bsf	4082,5,c	;volatile
   584                           
   585                           ; BSR set to: 15
   586                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   587  0004F8  0EDC               	movlw	low _TMR0_DefaultInterruptHandler
   588  0004FA  6E3B               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   589  0004FC  0E05               	movlw	high _TMR0_DefaultInterruptHandler
   590  0004FE  6E3C               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   591  000500  ECF5  F002         	call	_TMR0_SetInterruptHandler	;wreg free
   592                           
   593                           ; BSR set to: 15
   594                           ;tmr0.c: 92: T0CON = 0xD0;
   595  000504  0ED0               	movlw	208
   596  000506  6ED5               	movwf	4053,c	;volatile
   597                           
   598                           ; BSR set to: 15
   599  000508  0012               	return		;funcret
   600  00050A                     __end_of_TMR0_Initialize:
   601                           	opt callstack 0
   602                           
   603 ;; *************** function _TMR0_SetInterruptHandler *****************
   604 ;; Defined at:
   605 ;;		line 148 in file "mcc_generated_files/tmr0.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   608 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 3F/F
   617 ;;		On exit  : 3F/F
   618 ;;		Unchanged: 3E/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1
   620 ;;      Params:         2       0       0
   621 ;;      Locals:         0       0       0
   622 ;;      Temps:          0       0       0
   623 ;;      Totals:         2       0       0
   624 ;;Total ram usage:        2 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    3
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_TMR0_Initialize
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text3
   635  0005EA                     __ptext3:
   636                           	opt callstack 0
   637  0005EA                     _TMR0_SetInterruptHandler:
   638                           	opt callstack 25
   639                           
   640                           ; BSR set to: 15
   641                           ;tmr0.c: 149: TMR0_InterruptHandler = InterruptHandler;
   642                           
   643                           ; BSR set to: 15
   644                           ;incstack = 0
   645  0005EA  C03B  F057         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   646  0005EE  C03C  F058         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   647                           
   648                           ; BSR set to: 15
   649  0005F2  0012               	return		;funcret
   650  0005F4                     __end_of_TMR0_SetInterruptHandler:
   651                           	opt callstack 0
   652                           
   653 ;; *************** function _PIN_MANAGER_Initialize *****************
   654 ;; Defined at:
   655 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 3F/F
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1
   669 ;;      Params:         0       0       0
   670 ;;      Locals:         0       0       0
   671 ;;      Temps:          0       0       0
   672 ;;      Totals:         0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    3
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_SYSTEM_Initialize
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text4
   684  000422                     __ptext4:
   685                           	opt callstack 0
   686  000422                     _PIN_MANAGER_Initialize:
   687                           	opt callstack 26
   688                           
   689                           ;pin_manager.c: 60: LATA = 0x00;
   690                           
   691                           ; BSR set to: 15
   692                           ;incstack = 0
   693  000422  0E00               	movlw	0
   694  000424  6E89               	movwf	3977,c	;volatile
   695                           
   696                           ;pin_manager.c: 61: LATB = 0x00;
   697  000426  0E00               	movlw	0
   698  000428  6E8A               	movwf	3978,c	;volatile
   699                           
   700                           ;pin_manager.c: 62: LATC = 0x00;
   701  00042A  0E00               	movlw	0
   702  00042C  6E8B               	movwf	3979,c	;volatile
   703                           
   704                           ;pin_manager.c: 67: TRISA = 0xF0;
   705  00042E  0EF0               	movlw	240
   706  000430  6E92               	movwf	3986,c	;volatile
   707                           
   708                           ;pin_manager.c: 68: TRISB = 0xFA;
   709  000432  0EFA               	movlw	250
   710  000434  6E93               	movwf	3987,c	;volatile
   711                           
   712                           ;pin_manager.c: 69: TRISC = 0xBF;
   713  000436  0EBF               	movlw	191
   714  000438  6E94               	movwf	3988,c	;volatile
   715                           
   716                           ;pin_manager.c: 74: ANSELC = 0x3C;
   717  00043A  0E3C               	movlw	60
   718  00043C  010F               	movlb	15	; () banked
   719  00043E  6F3A               	movwf	58,b	;volatile
   720                           
   721                           ;pin_manager.c: 75: ANSELB = 0x38;
   722  000440  0E38               	movlw	56
   723  000442  6F39               	movwf	57,b	;volatile
   724                           
   725                           ;pin_manager.c: 76: ANSELA = 0x20;
   726  000444  0E20               	movlw	32
   727  000446  6F38               	movwf	56,b	;volatile
   728                           
   729                           ;pin_manager.c: 81: WPUB = 0x00;
   730  000448  0E00               	movlw	0
   731  00044A  6E61               	movwf	3937,c	;volatile
   732                           
   733                           ; BSR set to: 15
   734                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   735  00044C  8EF1               	bsf	4081,7,c	;volatile
   736                           
   737                           ; BSR set to: 15
   738  00044E  0012               	return		;funcret
   739  000450                     __end_of_PIN_MANAGER_Initialize:
   740                           	opt callstack 0
   741                           
   742 ;; *************** function _OSCILLATOR_Initialize *****************
   743 ;; Defined at:
   744 ;;		line 60 in file "mcc_generated_files/mcc.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2
   753 ;; Tracked objects:
   754 ;;		On entry : 3F/F
   755 ;;		On exit  : 3F/F
   756 ;;		Unchanged: 3E/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1
   758 ;;      Params:         0       0       0
   759 ;;      Locals:         0       0       0
   760 ;;      Temps:          0       0       0
   761 ;;      Totals:         0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_SYSTEM_Initialize
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text5
   773  0005C0                     __ptext5:
   774                           	opt callstack 0
   775  0005C0                     _OSCILLATOR_Initialize:
   776                           	opt callstack 26
   777                           
   778                           ; BSR set to: 15
   779                           ;mcc.c: 63: OSCCON = 0x30;
   780                           
   781                           ; BSR set to: 15
   782                           ;incstack = 0
   783  0005C0  0E30               	movlw	48
   784  0005C2  6ED3               	movwf	4051,c	;volatile
   785                           
   786                           ;mcc.c: 65: OSCCON2 = 0x04;
   787  0005C4  0E04               	movlw	4
   788  0005C6  6ED2               	movwf	4050,c	;volatile
   789                           
   790                           ;mcc.c: 67: OSCTUNE = 0x00;
   791  0005C8  0E00               	movlw	0
   792  0005CA  6E9B               	movwf	3995,c	;volatile
   793                           
   794                           ; BSR set to: 15
   795  0005CC  0012               	return		;funcret
   796  0005CE                     __end_of_OSCILLATOR_Initialize:
   797                           	opt callstack 0
   798                           
   799 ;; *************** function _INTERRUPT_Initialize *****************
   800 ;; Defined at:
   801 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		None
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1
   815 ;;      Params:         0       0       0
   816 ;;      Locals:         0       0       0
   817 ;;      Temps:          0       0       0
   818 ;;      Totals:         0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    3
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_SYSTEM_Initialize
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text6
   830  00060C                     __ptext6:
   831                           	opt callstack 0
   832  00060C                     _INTERRUPT_Initialize:
   833                           	opt callstack 26
   834                           
   835                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   836                           
   837                           ; BSR set to: 15
   838                           ;incstack = 0
   839  00060C  9ED0               	bcf	4048,7,c	;volatile
   840  00060E  0012               	return		;funcret
   841  000610                     __end_of_INTERRUPT_Initialize:
   842                           	opt callstack 0
   843                           
   844 ;; *************** function _EUSART1_Initialize *****************
   845 ;; Defined at:
   846 ;;		line 94 in file "mcc_generated_files/eusart1.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2
   855 ;; Tracked objects:
   856 ;;		On entry : 3F/F
   857 ;;		On exit  : 3F/F
   858 ;;		Unchanged: 3E/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1
   860 ;;      Params:         0       0       0
   861 ;;      Locals:         0       0       0
   862 ;;      Temps:          0       0       0
   863 ;;      Totals:         0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    3
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_SYSTEM_Initialize
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text7
   875  0003BA                     __ptext7:
   876                           	opt callstack 0
   877  0003BA                     _EUSART1_Initialize:
   878                           	opt callstack 26
   879                           
   880                           ; BSR set to: 15
   881                           ;eusart1.c: 97: PIE1bits.RC1IE = 0;
   882                           
   883                           ;incstack = 0
   884  0003BA  9A9D               	bcf	3997,5,c	;volatile
   885                           
   886                           ;eusart1.c: 99: PIE1bits.TX1IE = 0;
   887  0003BC  989D               	bcf	3997,4,c	;volatile
   888                           
   889                           ; BSR set to: 15
   890                           ;eusart1.c: 104: BAUDCON1 = 0x08;
   891  0003BE  0E08               	movlw	8
   892  0003C0  6EB8               	movwf	4024,c	;volatile
   893                           
   894                           ;eusart1.c: 107: RCSTA1 = 0x90;
   895  0003C2  0E90               	movlw	144
   896  0003C4  6EAB               	movwf	4011,c	;volatile
   897                           
   898                           ;eusart1.c: 110: TXSTA1 = 0x24;
   899  0003C6  0E24               	movlw	36
   900  0003C8  6EAC               	movwf	4012,c	;volatile
   901                           
   902                           ;eusart1.c: 113: SPBRG1 = 0x19;
   903  0003CA  0E19               	movlw	25
   904  0003CC  6EAF               	movwf	4015,c	;volatile
   905                           
   906                           ;eusart1.c: 116: SPBRGH1 = 0x00;
   907  0003CE  0E00               	movlw	0
   908  0003D0  6EB0               	movwf	4016,c	;volatile
   909                           
   910                           ;eusart1.c: 123: eusart1RxLastError.status = 0;
   911  0003D2  0E00               	movlw	0
   912  0003D4  6E2B               	movwf	_eusart1RxLastError,c	;volatile
   913                           
   914                           ;eusart1.c: 126: eusart1TxHead = 0;
   915  0003D6  0E00               	movlw	0
   916  0003D8  6E30               	movwf	_eusart1TxHead,c	;volatile
   917                           
   918                           ;eusart1.c: 127: eusart1TxTail = 0;
   919  0003DA  0E00               	movlw	0
   920  0003DC  6E2F               	movwf	_eusart1TxTail,c	;volatile
   921                           
   922                           ;eusart1.c: 128: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   923  0003DE  0E08               	movlw	8
   924  0003E0  6E5A               	movwf	_eusart1TxBufferRemaining,c	;volatile
   925                           
   926                           ;eusart1.c: 130: eusart1RxHead = 0;
   927  0003E2  0E00               	movlw	0
   928  0003E4  6E2E               	movwf	_eusart1RxHead,c	;volatile
   929                           
   930                           ;eusart1.c: 131: eusart1RxTail = 0;
   931  0003E6  0E00               	movlw	0
   932  0003E8  6E2D               	movwf	_eusart1RxTail,c	;volatile
   933                           
   934                           ;eusart1.c: 132: eusart1RxCount = 0;
   935  0003EA  0E00               	movlw	0
   936  0003EC  6E2C               	movwf	_eusart1RxCount,c	;volatile
   937                           
   938                           ; BSR set to: 15
   939                           ;eusart1.c: 135: PIE1bits.RC1IE = 1;
   940  0003EE  8A9D               	bsf	3997,5,c	;volatile
   941                           
   942                           ; BSR set to: 15
   943  0003F0  0012               	return		;funcret
   944  0003F2                     __end_of_EUSART1_Initialize:
   945                           	opt callstack 0
   946                           
   947 ;; *************** function _Modbus_Read *****************
   948 ;; Defined at:
   949 ;;		line 130 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/F
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1
   963 ;;      Params:         0       0       0
   964 ;;      Locals:         0       0       0
   965 ;;      Temps:          4       0       0
   966 ;;      Totals:         4       0       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    8
   970 ;; This function calls:
   971 ;;		_EUSART1_Read
   972 ;;		_HR_handler
   973 ;;		_MB_handler
   974 ;;		_Rx_isEmpty
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text8
   981  0001C2                     __ptext8:
   982                           	opt callstack 0
   983  0001C2                     _Modbus_Read:
   984                           	opt callstack 22
   985                           
   986                           ;main.c: 132: static uint32_t MB_D_time = 0;;main.c: 133: static uint8_t index = 0;;main
      +                          .c: 134: if(!Rx_isEmpty())
   987                           
   988                           ; BSR set to: 15
   989                           ;incstack = 0
   990  0001C2  ECE7  F002         	call	_Rx_isEmpty	;wreg free
   991  0001C6  0900               	iorlw	0
   992  0001C8  A4D8               	btfss	status,2,c
   993  0001CA  D012               	goto	l1659
   994                           
   995                           ;main.c: 135: {;main.c: 136: MB_CMD_Buffer[index++] = EUSART1_Read();
   996  0001CC  EC03  F003         	call	_EUSART1_Read	;wreg free
   997  0001D0  6E4A               	movwf	??_Modbus_Read& (0+255),c
   998  0001D2  5025               	movf	Modbus_Read@index,w,c
   999  0001D4  0F98               	addlw	low _MB_CMD_Buffer
  1000  0001D6  6ED9               	movwf	fsr2l,c
  1001  0001D8  6ADA               	clrf	fsr2h,c
  1002  0001DA  C04A  FFDF         	movff	??_Modbus_Read,indf2
  1003  0001DE  2A25               	incf	Modbus_Read@index,f,c
  1004                           
  1005                           ;main.c: 137: MB_D_time = timecount;
  1006  0001E0  C015  F011         	movff	_timecount,Modbus_Read@MB_D_time
  1007  0001E4  C016  F012         	movff	_timecount+1,Modbus_Read@MB_D_time+1
  1008  0001E8  C017  F013         	movff	_timecount+2,Modbus_Read@MB_D_time+2
  1009  0001EC  C018  F014         	movff	_timecount+3,Modbus_Read@MB_D_time+3
  1010  0001F0                     l1659:
  1011                           
  1012                           ;main.c: 138: };main.c: 140: if ((uint32_t)(timecount - MB_D_time) > 3)
  1013  0001F0  5011               	movf	Modbus_Read@MB_D_time,w,c
  1014  0001F2  5C15               	subwf	_timecount,w,c
  1015  0001F4  6E4A               	movwf	??_Modbus_Read& (0+255),c
  1016  0001F6  5012               	movf	Modbus_Read@MB_D_time+1,w,c
  1017  0001F8  5816               	subwfb	_timecount+1,w,c
  1018  0001FA  6E4B               	movwf	(??_Modbus_Read+1)& (0+255),c
  1019  0001FC  5013               	movf	Modbus_Read@MB_D_time+2,w,c
  1020  0001FE  5817               	subwfb	_timecount+2,w,c
  1021  000200  6E4C               	movwf	(??_Modbus_Read+2)& (0+255),c
  1022  000202  5014               	movf	Modbus_Read@MB_D_time+3,w,c
  1023  000204  5818               	subwfb	_timecount+3,w,c
  1024  000206  6E4D               	movwf	(??_Modbus_Read+3)& (0+255),c
  1025  000208  504D               	movf	??_Modbus_Read+3,w,c
  1026  00020A  104C               	iorwf	??_Modbus_Read+2,w,c
  1027  00020C  104B               	iorwf	??_Modbus_Read+1,w,c
  1028  00020E  E104               	bnz	u410
  1029  000210  0E04               	movlw	4
  1030  000212  5C4A               	subwf	??_Modbus_Read,w,c
  1031  000214  A0D8               	btfss	status,0,c
  1032  000216  0012               	return	
  1033  000218                     u410:
  1034                           
  1035                           ;main.c: 141: {;main.c: 142: MB_handler();
  1036  000218  EC28  F002         	call	_MB_handler	;wreg free
  1037                           
  1038                           ;main.c: 143: HR_handler();
  1039  00021C  ECBA  F001         	call	_HR_handler	;wreg free
  1040                           
  1041                           ;main.c: 144: MB_D_time = timecount;
  1042  000220  C015  F011         	movff	_timecount,Modbus_Read@MB_D_time
  1043  000224  C016  F012         	movff	_timecount+1,Modbus_Read@MB_D_time+1
  1044  000228  C017  F013         	movff	_timecount+2,Modbus_Read@MB_D_time+2
  1045  00022C  C018  F014         	movff	_timecount+3,Modbus_Read@MB_D_time+3
  1046                           
  1047                           ;main.c: 145: index=0;
  1048  000230  0E00               	movlw	0
  1049  000232  6E25               	movwf	Modbus_Read@index,c
  1050  000234  0012               	return		;funcret
  1051  000236                     __end_of_Modbus_Read:
  1052                           	opt callstack 0
  1053                           
  1054 ;; *************** function _Rx_isEmpty *****************
  1055 ;; Defined at:
  1056 ;;		line 319 in file "mcc_generated_files/eusart1.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      unsigned char 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/F
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1
  1070 ;;      Params:         0       0       0
  1071 ;;      Locals:         0       0       0
  1072 ;;      Temps:          0       0       0
  1073 ;;      Totals:         0       0       0
  1074 ;;Total ram usage:        0 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    3
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_Modbus_Read
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text9
  1085  0005CE                     __ptext9:
  1086                           	opt callstack 0
  1087  0005CE                     _Rx_isEmpty:
  1088                           	opt callstack 26
  1089                           
  1090                           ;eusart1.c: 321: return Rx_Head==Rx_Tail;
  1091                           
  1092                           ;incstack = 0
  1093  0005CE  5028               	movf	_Rx_Tail,w,c
  1094  0005D0  A4D8               	btfss	status,2,c
  1095  0005D2  D002               	goto	u340
  1096  0005D4  0E01               	movlw	1
  1097  0005D6  0012               	return	
  1098  0005D8                     u340:
  1099  0005D8  0E00               	movlw	0
  1100  0005DA  0012               	return		;funcret
  1101  0005DC                     __end_of_Rx_isEmpty:
  1102                           	opt callstack 0
  1103                           
  1104 ;; *************** function _MB_handler *****************
  1105 ;; Defined at:
  1106 ;;		line 148 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/F
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1
  1120 ;;      Params:         0       0       0
  1121 ;;      Locals:         0       0       0
  1122 ;;      Temps:          0       0       0
  1123 ;;      Totals:         0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    7
  1127 ;; This function calls:
  1128 ;;		_HR_read
  1129 ;;		_HR_single_write
  1130 ;; This function is called by:
  1131 ;;		_Modbus_Read
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text10
  1136  000450                     __ptext10:
  1137                           	opt callstack 0
  1138  000450                     _MB_handler:
  1139                           	opt callstack 22
  1140                           
  1141                           ;main.c: 150: if (MB_CMD_Buffer[0] != MBID)
  1142                           
  1143                           ;incstack = 0
  1144  000450  5059               	movf	_MBID,w,c
  1145  000452  0100               	movlb	0	; () banked
  1146  000454  1998               	xorwf	_MB_CMD_Buffer& (0+255),w,b
  1147  000456  A4D8               	btfss	status,2,c
  1148  000458  0012               	return	
  1149  00045A  D006               	goto	l1623
  1150  00045C                     l1617:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 155: HR_read();
  1154  00045C  EC93  F000         	call	_HR_read	;wreg free
  1155                           
  1156                           ;main.c: 156: break;
  1157  000460  0012               	return	
  1158  000462                     l1619:
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 158: HR_single_write();
  1162  000462  EC88  F001         	call	_HR_single_write	;wreg free
  1163                           
  1164                           ;main.c: 159: break;
  1165  000466  0012               	return	
  1166  000468                     l1623:
  1167                           
  1168                           ; BSR set to: 0
  1169  000468  5199               	movf	(_MB_CMD_Buffer+1)& (0+255),w,b
  1170                           
  1171                           ; Switch size 1, requested type "simple"
  1172                           ; Number of cases is 2, Range of values is 3 to 6
  1173                           ; switch strategies available:
  1174                           ; Name         Instructions Cycles
  1175                           ; simple_byte            7     4 (average)
  1176                           ;	Chosen strategy is simple_byte
  1177  00046A  0A03               	xorlw	3	; case 3
  1178  00046C  B4D8               	btfsc	status,2,c
  1179  00046E  D7F6               	goto	l1617
  1180  000470  0A05               	xorlw	5	; case 6
  1181  000472  A4D8               	btfss	status,2,c
  1182  000474  0012               	return	
  1183  000476  D7F5               	goto	l1619
  1184  000478                     __end_of_MB_handler:
  1185                           	opt callstack 0
  1186                           
  1187 ;; *************** function _HR_single_write *****************
  1188 ;; Defined at:
  1189 ;;		line 202 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  u               2   11[COMRAM] struct .
  1194 ;;  addr            2    8[COMRAM] unsigned int 
  1195 ;;  i               1   10[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1
  1205 ;;      Params:         0       0       0
  1206 ;;      Locals:         5       0       0
  1207 ;;      Temps:          0       0       0
  1208 ;;      Totals:         5       0       0
  1209 ;;Total ram usage:        5 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    6
  1212 ;; This function calls:
  1213 ;;		_memset
  1214 ;;		_write_ACK
  1215 ;; This function is called by:
  1216 ;;		_MB_handler
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text11
  1221  000310                     __ptext11:
  1222                           	opt callstack 0
  1223  000310                     _HR_single_write:
  1224                           	opt callstack 22
  1225                           
  1226                           ;main.c: 204: SHORT u;;main.c: 205: uint8_t i ;;main.c: 206: uint16_t addr;;main.c: 208:
      +                           u.HB = MB_CMD_Buffer[2];
  1227                           
  1228                           ;incstack = 0
  1229  000310  C09A  F045         	movff	_MB_CMD_Buffer+2,HR_single_write@u+1
  1230                           
  1231                           ;main.c: 209: u.LB = MB_CMD_Buffer[3];
  1232  000314  C09B  F044         	movff	_MB_CMD_Buffer+3,HR_single_write@u
  1233                           
  1234                           ;main.c: 210: addr = u.v;
  1235  000318  C044  F041         	movff	HR_single_write@u,HR_single_write@addr
  1236  00031C  C045  F042         	movff	HR_single_write@u+1,HR_single_write@addr+1
  1237                           
  1238                           ;main.c: 211: u.HB = MB_CMD_Buffer[4];
  1239  000320  C09C  F045         	movff	_MB_CMD_Buffer+4,HR_single_write@u+1
  1240                           
  1241                           ;main.c: 212: u.LB = MB_CMD_Buffer[5];
  1242  000324  C09D  F044         	movff	_MB_CMD_Buffer+5,HR_single_write@u
  1243                           
  1244                           ;main.c: 213: HR[addr] = u.v;
  1245  000328  5041               	movf	HR_single_write@addr,w,c
  1246  00032A  0F31               	addlw	low _HR
  1247  00032C  6ED9               	movwf	fsr2l,c
  1248  00032E  6ADA               	clrf	fsr2h,c
  1249  000330  C044  FFDF         	movff	HR_single_write@u,indf2
  1250                           
  1251                           ;main.c: 214: for(i=0;i<6;i++)
  1252  000334  0E00               	movlw	0
  1253  000336  6E43               	movwf	HR_single_write@i,c
  1254  000338                     l1577:
  1255                           
  1256                           ;main.c: 215: {;main.c: 216: MB_ACK_buf[i] = MB_CMD_Buffer[i];
  1257  000338  5043               	movf	HR_single_write@i,w,c
  1258  00033A  0F98               	addlw	low _MB_CMD_Buffer
  1259  00033C  6ED9               	movwf	fsr2l,c
  1260  00033E  6ADA               	clrf	fsr2h,c
  1261  000340  5043               	movf	HR_single_write@i,w,c
  1262  000342  0F01               	addlw	low _MB_ACK_buf
  1263  000344  6EE1               	movwf	fsr1l,c
  1264  000346  6AE2               	clrf	fsr1h,c
  1265  000348  CFDF FFE7          	movff	indf2,indf1
  1266  00034C  2A43               	incf	HR_single_write@i,f,c
  1267  00034E  0E05               	movlw	5
  1268  000350  6443               	cpfsgt	HR_single_write@i,c
  1269  000352  D7F2               	goto	l1577
  1270                           
  1271                           ;main.c: 217: };main.c: 218: write_ACK(6);
  1272  000354  0E06               	movlw	6
  1273  000356  EC85  F002         	call	_write_ACK
  1274                           
  1275                           ;main.c: 220: memset(MB_CMD_Buffer,0x00,32);
  1276  00035A  0E98               	movlw	low _MB_CMD_Buffer
  1277  00035C  6E3B               	movwf	memset@p1,c
  1278  00035E  0E00               	movlw	0
  1279  000360  6E3D               	movwf	memset@c+1,c
  1280  000362  0E00               	movlw	0
  1281  000364  6E3C               	movwf	memset@c,c
  1282  000366  0E00               	movlw	0
  1283  000368  6E3F               	movwf	memset@n+1,c
  1284  00036A  0E20               	movlw	32
  1285  00036C  6E3E               	movwf	memset@n,c
  1286  00036E  EC62  F002         	call	_memset	;wreg free
  1287  000372  0012               	return		;funcret
  1288  000374                     __end_of_HR_single_write:
  1289                           	opt callstack 0
  1290                           
  1291 ;; *************** function _HR_read *****************
  1292 ;; Defined at:
  1293 ;;		line 162 in file "main.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  u               2   15[COMRAM] struct .
  1298 ;;  n               2   10[COMRAM] unsigned int 
  1299 ;;  j               1   14[COMRAM] unsigned char 
  1300 ;;  i               1   13[COMRAM] unsigned char 
  1301 ;;  p               1   12[COMRAM] PTR unsigned int 
  1302 ;;		 -> HR(8), 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1
  1312 ;;      Params:         0       0       0
  1313 ;;      Locals:         7       0       0
  1314 ;;      Temps:          2       0       0
  1315 ;;      Totals:         9       0       0
  1316 ;;Total ram usage:        9 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    6
  1319 ;; This function calls:
  1320 ;;		_memset
  1321 ;;		_write_ACK
  1322 ;; This function is called by:
  1323 ;;		_MB_handler
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text12
  1328  000126                     __ptext12:
  1329                           	opt callstack 0
  1330  000126                     _HR_read:
  1331                           	opt callstack 22
  1332                           
  1333                           ;main.c: 164: SHORT u ;;main.c: 165: uint8_t i;;main.c: 166: uint8_t j;;main.c: 167: uin
      +                          t16_t*p;;main.c: 168: uint16_t n;;main.c: 170: MB_ACK_buf[0] = MB_CMD_Buffer[0];
  1334                           
  1335                           ;incstack = 0
  1336  000126  C098  F001         	movff	_MB_CMD_Buffer,_MB_ACK_buf
  1337                           
  1338                           ;main.c: 171: MB_ACK_buf[1] = MB_CMD_Buffer[1];
  1339  00012A  C099  F002         	movff	_MB_CMD_Buffer+1,_MB_ACK_buf+1
  1340                           
  1341                           ;main.c: 173: u.HB = MB_CMD_Buffer[2];
  1342  00012E  C09A  F049         	movff	_MB_CMD_Buffer+2,HR_read@u+1
  1343                           
  1344                           ;main.c: 174: u.LB = MB_CMD_Buffer[3];
  1345  000132  C09B  F048         	movff	_MB_CMD_Buffer+3,HR_read@u
  1346                           
  1347                           ;main.c: 175: p = &(HR[u.v]);
  1348  000136  5048               	movf	HR_read@u,w,c
  1349  000138  0F31               	addlw	low _HR
  1350  00013A  6E45               	movwf	HR_read@p,c
  1351                           
  1352                           ;main.c: 177: u.HB = MB_CMD_Buffer[4];
  1353  00013C  C09C  F049         	movff	_MB_CMD_Buffer+4,HR_read@u+1
  1354                           
  1355                           ;main.c: 178: u.LB = MB_CMD_Buffer[5];
  1356  000140  C09D  F048         	movff	_MB_CMD_Buffer+5,HR_read@u
  1357                           
  1358                           ;main.c: 179: MB_ACK_buf[2] = u.v << 1;
  1359  000144  5048               	movf	HR_read@u,w,c
  1360  000146  2448               	addwf	HR_read@u,w,c
  1361  000148  6E03               	movwf	_MB_ACK_buf+2,c
  1362                           
  1363                           ;main.c: 180: n= u.v ;
  1364  00014A  C048  F043         	movff	HR_read@u,HR_read@n
  1365  00014E  C049  F044         	movff	HR_read@u+1,HR_read@n+1
  1366                           
  1367                           ;main.c: 182: j = 3;
  1368  000152  0E03               	movlw	3
  1369  000154  6E47               	movwf	HR_read@j,c
  1370                           
  1371                           ;main.c: 183: for (i=0;i<n;i++)
  1372  000156  0E00               	movlw	0
  1373  000158  6E46               	movwf	HR_read@i,c
  1374  00015A  D019               	goto	l1563
  1375  00015C                     l1551:
  1376                           
  1377                           ;main.c: 184: {;main.c: 185: u.v =p[i];
  1378  00015C  5046               	movf	HR_read@i,w,c
  1379  00015E  0D02               	mullw	2
  1380  000160  5045               	movf	HR_read@p,w,c
  1381  000162  24F3               	addwf	prodl,w,c
  1382  000164  6ED9               	movwf	fsr2l,c
  1383  000166  6ADA               	clrf	fsr2h,c
  1384  000168  CFDE F048          	movff	postinc2,HR_read@u
  1385  00016C  CFDD F049          	movff	postdec2,HR_read@u+1
  1386                           
  1387                           ;main.c: 186: MB_ACK_buf[j++] = u.HB;
  1388  000170  5047               	movf	HR_read@j,w,c
  1389  000172  0F01               	addlw	low _MB_ACK_buf
  1390  000174  6ED9               	movwf	fsr2l,c
  1391  000176  6ADA               	clrf	fsr2h,c
  1392  000178  C049  FFDF         	movff	HR_read@u+1,indf2
  1393  00017C  2A47               	incf	HR_read@j,f,c
  1394                           
  1395                           ;main.c: 187: MB_ACK_buf[j++] = u.LB;
  1396  00017E  5047               	movf	HR_read@j,w,c
  1397  000180  0F01               	addlw	low _MB_ACK_buf
  1398  000182  6ED9               	movwf	fsr2l,c
  1399  000184  6ADA               	clrf	fsr2h,c
  1400  000186  C048  FFDF         	movff	HR_read@u,indf2
  1401  00018A  2A47               	incf	HR_read@j,f,c
  1402  00018C  2A46               	incf	HR_read@i,f,c
  1403  00018E                     l1563:
  1404  00018E  5046               	movf	HR_read@i,w,c
  1405  000190  6E41               	movwf	??_HR_read& (0+255),c
  1406  000192  6A42               	clrf	(??_HR_read+1)& (0+255),c
  1407  000194  5043               	movf	HR_read@n,w,c
  1408  000196  5C41               	subwf	??_HR_read,w,c
  1409  000198  5044               	movf	HR_read@n+1,w,c
  1410  00019A  5842               	subwfb	??_HR_read+1,w,c
  1411  00019C  A0D8               	btfss	status,0,c
  1412  00019E  D7DE               	goto	l1551
  1413                           
  1414                           ;main.c: 188: };main.c: 189: write_ACK(MB_ACK_buf[2]+3);
  1415  0001A0  5003               	movf	_MB_ACK_buf+2,w,c
  1416  0001A2  0F03               	addlw	3
  1417  0001A4  EC85  F002         	call	_write_ACK
  1418                           
  1419                           ;main.c: 191: memset(MB_CMD_Buffer,0x00,32);
  1420  0001A8  0E98               	movlw	low _MB_CMD_Buffer
  1421  0001AA  6E3B               	movwf	memset@p1,c
  1422  0001AC  0E00               	movlw	0
  1423  0001AE  6E3D               	movwf	memset@c+1,c
  1424  0001B0  0E00               	movlw	0
  1425  0001B2  6E3C               	movwf	memset@c,c
  1426  0001B4  0E00               	movlw	0
  1427  0001B6  6E3F               	movwf	memset@n+1,c
  1428  0001B8  0E20               	movlw	32
  1429  0001BA  6E3E               	movwf	memset@n,c
  1430  0001BC  EC62  F002         	call	_memset	;wreg free
  1431  0001C0  0012               	return		;funcret
  1432  0001C2                     __end_of_HR_read:
  1433                           	opt callstack 0
  1434                           
  1435 ;; *************** function _write_ACK *****************
  1436 ;; Defined at:
  1437 ;;		line 194 in file "main.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  size            1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  size            1    4[COMRAM] unsigned char 
  1442 ;;  i               1    5[COMRAM] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1
  1452 ;;      Params:         0       0       0
  1453 ;;      Locals:         2       0       0
  1454 ;;      Temps:          0       0       0
  1455 ;;      Totals:         2       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    5
  1459 ;; This function calls:
  1460 ;;		_EUSART1_Write
  1461 ;; This function is called by:
  1462 ;;		_HR_read
  1463 ;;		_HR_single_write
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text13
  1468  00050A                     __ptext13:
  1469                           	opt callstack 0
  1470  00050A                     _write_ACK:
  1471                           	opt callstack 22
  1472                           
  1473                           ;incstack = 0
  1474                           ;write_ACK@size stored from wreg
  1475  00050A  6E3D               	movwf	write_ACK@size,c
  1476                           
  1477                           ;main.c: 196: uint8_t i ;;main.c: 197: for (i=0;i<size;i++)
  1478  00050C  0E00               	movlw	0
  1479  00050E  6E3E               	movwf	write_ACK@i,c
  1480  000510  D008               	goto	l1515
  1481  000512                     l1511:
  1482                           
  1483                           ;main.c: 198: {;main.c: 199: EUSART1_Write(MB_ACK_buf[i]);
  1484  000512  503E               	movf	write_ACK@i,w,c
  1485  000514  0F01               	addlw	low _MB_ACK_buf
  1486  000516  6ED9               	movwf	fsr2l,c
  1487  000518  6ADA               	clrf	fsr2h,c
  1488  00051A  50DF               	movf	indf2,w,c
  1489  00051C  ECFA  F002         	call	_EUSART1_Write
  1490  000520  2A3E               	incf	write_ACK@i,f,c
  1491  000522                     l1515:
  1492  000522  503D               	movf	write_ACK@size,w,c
  1493  000524  5C3E               	subwf	write_ACK@i,w,c
  1494  000526  B0D8               	btfsc	status,0,c
  1495  000528  0012               	return	
  1496  00052A  D7F3               	goto	l1511
  1497  00052C                     __end_of_write_ACK:
  1498                           	opt callstack 0
  1499                           
  1500 ;; *************** function _EUSART1_Write *****************
  1501 ;; Defined at:
  1502 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  txData          1    wreg     unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  txData          1    3[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1
  1516 ;;      Params:         0       0       0
  1517 ;;      Locals:         1       0       0
  1518 ;;      Temps:          0       0       0
  1519 ;;      Totals:         1       0       0
  1520 ;;Total ram usage:        1 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    4
  1523 ;; This function calls:
  1524 ;;		_Tx_enQ
  1525 ;; This function is called by:
  1526 ;;		_write_ACK
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text14
  1531  0005F4                     __ptext14:
  1532                           	opt callstack 0
  1533  0005F4                     _EUSART1_Write:
  1534                           	opt callstack 22
  1535                           
  1536                           ;incstack = 0
  1537                           ;EUSART1_Write@txData stored from wreg
  1538  0005F4  6E3C               	movwf	EUSART1_Write@txData,c
  1539                           
  1540                           ;eusart1.c: 207: Tx_enQ(txData);
  1541  0005F6  503C               	movf	EUSART1_Write@txData,w,c
  1542  0005F8  ECAE  F002         	call	_Tx_enQ
  1543  0005FC  0012               	return		;funcret
  1544  0005FE                     __end_of_EUSART1_Write:
  1545                           	opt callstack 0
  1546                           
  1547 ;; *************** function _Tx_enQ *****************
  1548 ;; Defined at:
  1549 ;;		line 348 in file "mcc_generated_files/eusart1.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  data            1    wreg     unsigned char 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  data            1    2[COMRAM] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1
  1563 ;;      Params:         0       0       0
  1564 ;;      Locals:         1       0       0
  1565 ;;      Temps:          0       0       0
  1566 ;;      Totals:         1       0       0
  1567 ;;Total ram usage:        1 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_EUSART1_Write
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text15
  1578  00055C                     __ptext15:
  1579                           	opt callstack 0
  1580  00055C                     _Tx_enQ:
  1581                           	opt callstack 22
  1582                           
  1583                           ;incstack = 0
  1584                           ;Tx_enQ@data stored from wreg
  1585  00055C  6E3B               	movwf	Tx_enQ@data,c
  1586                           
  1587                           ;eusart1.c: 350: Tx_CQ[Tx_Head++] = data;
  1588  00055E  5029               	movf	_Tx_Head,w,c
  1589  000560  0F60               	addlw	low _Tx_CQ
  1590  000562  6ED9               	movwf	fsr2l,c
  1591  000564  6ADA               	clrf	fsr2h,c
  1592  000566  C03B  FFDF         	movff	Tx_enQ@data,indf2
  1593  00056A  2A29               	incf	_Tx_Head,f,c
  1594                           
  1595                           ;eusart1.c: 351: Tx_Head &= 0x0F;
  1596  00056C  0E0F               	movlw	15
  1597  00056E  1629               	andwf	_Tx_Head,f,c
  1598  000570  0012               	return		;funcret
  1599  000572                     __end_of_Tx_enQ:
  1600                           	opt callstack 0
  1601                           
  1602 ;; *************** function _memset *****************
  1603 ;; Defined at:
  1604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  p1              1    2[COMRAM] PTR void 
  1607 ;;		 -> MB_CMD_Buffer(32), 
  1608 ;;  c               2    3[COMRAM] int 
  1609 ;;  n               2    5[COMRAM] unsigned int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  p               1    7[COMRAM] PTR unsigned char 
  1612 ;;		 -> MB_CMD_Buffer(32), 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      PTR void 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1
  1622 ;;      Params:         5       0       0
  1623 ;;      Locals:         1       0       0
  1624 ;;      Temps:          0       0       0
  1625 ;;      Totals:         6       0       0
  1626 ;;Total ram usage:        6 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_HR_read
  1633 ;;		_HR_single_write
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text16
  1638  0004C4                     __ptext16:
  1639                           	opt callstack 0
  1640  0004C4                     _memset:
  1641                           	opt callstack 24
  1642                           
  1643                           ;incstack = 0
  1644  0004C4  C03B  F040         	movff	memset@p1,memset@p
  1645  0004C8  D006               	goto	l1523
  1646  0004CA                     l1519:
  1647  0004CA  5040               	movf	memset@p,w,c
  1648  0004CC  6ED9               	movwf	fsr2l,c
  1649  0004CE  6ADA               	clrf	fsr2h,c
  1650  0004D0  C03C  FFDF         	movff	memset@c,indf2
  1651  0004D4  2A40               	incf	memset@p,f,c
  1652  0004D6                     l1523:
  1653  0004D6  063E               	decf	memset@n,f,c
  1654  0004D8  A0D8               	btfss	status,0,c
  1655  0004DA  063F               	decf	memset@n+1,f,c
  1656  0004DC  283E               	incf	memset@n,w,c
  1657  0004DE  E1F5               	bnz	l1519
  1658  0004E0  283F               	incf	memset@n+1,w,c
  1659  0004E2  B4D8               	btfsc	status,2,c
  1660  0004E4  0012               	return	
  1661  0004E6  D7F1               	goto	l1519
  1662  0004E8                     __end_of_memset:
  1663                           	opt callstack 0
  1664                           
  1665 ;; *************** function _HR_handler *****************
  1666 ;; Defined at:
  1667 ;;		line 223 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  i               2    5[COMRAM] int 
  1672 ;;  data            1    4[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/F
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1
  1682 ;;      Params:         0       0       0
  1683 ;;      Locals:         3       0       0
  1684 ;;      Temps:          2       0       0
  1685 ;;      Totals:         5       0       0
  1686 ;;Total ram usage:        5 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    3
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_Modbus_Read
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text17
  1697  000374                     __ptext17:
  1698                           	opt callstack 0
  1699  000374                     _HR_handler:
  1700                           	opt callstack 26
  1701                           
  1702                           ;main.c: 225: int i;;main.c: 226: uint8_t data;;main.c: 227: for (i=0; i<8; i++) {
  1703                           
  1704                           ;incstack = 0
  1705  000374  0E00               	movlw	0
  1706  000376  6E3F               	movwf	HR_handler@i+1,c
  1707  000378  0E00               	movlw	0
  1708  00037A  6E3E               	movwf	HR_handler@i,c
  1709  00037C                     l1631:
  1710                           
  1711                           ;main.c: 228: data|= HR[i] << (i % 8);
  1712  00037C  C03E  F03B         	movff	HR_handler@i,??_HR_handler
  1713  000380  0E07               	movlw	7
  1714  000382  163B               	andwf	??_HR_handler,f,c
  1715  000384  503E               	movf	HR_handler@i,w,c
  1716  000386  0F31               	addlw	low _HR
  1717  000388  6ED9               	movwf	fsr2l,c
  1718  00038A  6ADA               	clrf	fsr2h,c
  1719  00038C  50DF               	movf	indf2,w,c
  1720  00038E  6E3C               	movwf	(??_HR_handler+1)& (0+255),c
  1721  000390  2A3B               	incf	??_HR_handler,f,c
  1722  000392  D002               	goto	u374
  1723  000394                     u375:
  1724  000394  90D8               	bcf	status,0,c
  1725  000396  363C               	rlcf	??_HR_handler+1,f,c
  1726  000398                     u374:
  1727  000398  2E3B               	decfsz	??_HR_handler,f,c
  1728  00039A  D7FC               	goto	u375
  1729  00039C  503C               	movf	??_HR_handler+1,w,c
  1730  00039E  123D               	iorwf	HR_handler@data,f,c
  1731  0003A0  4A3E               	infsnz	HR_handler@i,f,c
  1732  0003A2  2A3F               	incf	HR_handler@i+1,f,c
  1733  0003A4  BE3F               	btfsc	HR_handler@i+1,7,c
  1734  0003A6  D7EA               	goto	l1631
  1735  0003A8  503F               	movf	HR_handler@i+1,w,c
  1736  0003AA  E104               	bnz	u380
  1737  0003AC  0E08               	movlw	8
  1738  0003AE  5C3E               	subwf	HR_handler@i,w,c
  1739  0003B0  A0D8               	btfss	status,0,c
  1740  0003B2  D7E4               	goto	l1631
  1741  0003B4                     u380:
  1742                           
  1743                           ;main.c: 229: };main.c: 230: _4094_buf = data&0xff;
  1744  0003B4  C03D  F026         	movff	HR_handler@data,__4094_buf
  1745  0003B8  0012               	return		;funcret
  1746  0003BA                     __end_of_HR_handler:
  1747                           	opt callstack 0
  1748                           
  1749 ;; *************** function _EUSART1_Read *****************
  1750 ;; Defined at:
  1751 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      unsigned char 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/F
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1
  1765 ;;      Params:         0       0       0
  1766 ;;      Locals:         0       0       0
  1767 ;;      Temps:          0       0       0
  1768 ;;      Totals:         0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    4
  1772 ;; This function calls:
  1773 ;;		_Rx_deQ
  1774 ;; This function is called by:
  1775 ;;		_Modbus_Read
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text18
  1780  000606                     __ptext18:
  1781                           	opt callstack 0
  1782  000606                     _EUSART1_Read:
  1783                           	opt callstack 25
  1784                           
  1785                           ;eusart1.c: 180: return Rx_deQ();
  1786                           
  1787                           ;incstack = 0
  1788  000606  ECB9  F002         	call	_Rx_deQ	;wreg free
  1789  00060A  0012               	return		;funcret
  1790  00060C                     __end_of_EUSART1_Read:
  1791                           	opt callstack 0
  1792                           
  1793 ;; *************** function _Rx_deQ *****************
  1794 ;; Defined at:
  1795 ;;		line 323 in file "mcc_generated_files/eusart1.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  data            1    2[COMRAM] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      unsigned char 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/F
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1
  1809 ;;      Params:         0       0       0
  1810 ;;      Locals:         1       0       0
  1811 ;;      Temps:          0       0       0
  1812 ;;      Totals:         1       0       0
  1813 ;;Total ram usage:        1 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    3
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_EUSART1_Read
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text19
  1824  000572                     __ptext19:
  1825                           	opt callstack 0
  1826  000572                     _Rx_deQ:
  1827                           	opt callstack 25
  1828                           
  1829                           ;eusart1.c: 324: uint8_t data;;eusart1.c: 325: data = Rx_CQ[Rx_Tail++];
  1830                           
  1831                           ;incstack = 0
  1832  000572  5028               	movf	_Rx_Tail,w,c
  1833  000574  0F70               	addlw	low _Rx_CQ
  1834  000576  6ED9               	movwf	fsr2l,c
  1835  000578  6ADA               	clrf	fsr2h,c
  1836  00057A  50DF               	movf	indf2,w,c
  1837  00057C  6E3B               	movwf	Rx_deQ@data,c
  1838  00057E  2A28               	incf	_Rx_Tail,f,c
  1839                           
  1840                           ;eusart1.c: 326: Rx_Tail&=0x0F;
  1841  000580  0E0F               	movlw	15
  1842  000582  1628               	andwf	_Rx_Tail,f,c
  1843                           
  1844                           ;eusart1.c: 327: return data;
  1845  000584  503B               	movf	Rx_deQ@data,w,c
  1846  000586  0012               	return		;funcret
  1847  000588                     __end_of_Rx_deQ:
  1848                           	opt callstack 0
  1849                           
  1850 ;; *************** function _Initial_Variable *****************
  1851 ;; Defined at:
  1852 ;;		line 232 in file "main.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  i               2    2[COMRAM] int 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 3F/F
  1863 ;;		On exit  : 3F/F
  1864 ;;		Unchanged: 3E/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1
  1866 ;;      Params:         0       0       0
  1867 ;;      Locals:         2       0       0
  1868 ;;      Temps:          0       0       0
  1869 ;;      Totals:         2       0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    3
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text20
  1881  0003F2                     __ptext20:
  1882                           	opt callstack 0
  1883  0003F2                     _Initial_Variable:
  1884                           	opt callstack 27
  1885                           
  1886                           ; BSR set to: 15
  1887                           ;main.c: 234: MBID = 0x01;
  1888                           
  1889                           ;incstack = 0
  1890  0003F2  0E01               	movlw	1
  1891  0003F4  6E59               	movwf	_MBID,c
  1892                           
  1893                           ;main.c: 236: for(int i=0;i < 8;i++)
  1894  0003F6  0E00               	movlw	0
  1895  0003F8  6E3C               	movwf	Initial_Variable@i+1,c
  1896  0003FA  0E00               	movlw	0
  1897  0003FC  6E3B               	movwf	Initial_Variable@i,c
  1898  0003FE                     l1427:
  1899                           
  1900                           ; BSR set to: 15
  1901                           ;main.c: 237: {;main.c: 238: HR[i] = 0;
  1902  0003FE  503B               	movf	Initial_Variable@i,w,c
  1903  000400  0F31               	addlw	low _HR
  1904  000402  6ED9               	movwf	fsr2l,c
  1905  000404  6ADA               	clrf	fsr2h,c
  1906  000406  0E00               	movlw	0
  1907  000408  6EDF               	movwf	indf2,c
  1908                           
  1909                           ; BSR set to: 15
  1910  00040A  4A3B               	infsnz	Initial_Variable@i,f,c
  1911  00040C  2A3C               	incf	Initial_Variable@i+1,f,c
  1912                           
  1913                           ; BSR set to: 15
  1914  00040E  BE3C               	btfsc	Initial_Variable@i+1,7,c
  1915  000410  D7F6               	goto	l1427
  1916  000412  503C               	movf	Initial_Variable@i+1,w,c
  1917  000414  E104               	bnz	u200
  1918  000416  0E08               	movlw	8
  1919  000418  5C3B               	subwf	Initial_Variable@i,w,c
  1920  00041A  A0D8               	btfss	status,0,c
  1921  00041C  D7F0               	goto	l1427
  1922  00041E                     u200:
  1923                           
  1924                           ; BSR set to: 15
  1925                           ;main.c: 239: };main.c: 241: _4094_buf =0xff;
  1926  00041E  6826               	setf	__4094_buf,c
  1927                           
  1928                           ; BSR set to: 15
  1929  000420  0012               	return		;funcret
  1930  000422                     __end_of_Initial_Variable:
  1931                           	opt callstack 0
  1932                           
  1933 ;; *************** function _EUSART1_Write_task *****************
  1934 ;; Defined at:
  1935 ;;		line 209 in file "mcc_generated_files/eusart1.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/F
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1
  1949 ;;      Params:         0       0       0
  1950 ;;      Locals:         0       0       0
  1951 ;;      Temps:          0       0       0
  1952 ;;      Totals:         0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    4
  1956 ;; This function calls:
  1957 ;;		_Tx_deQ
  1958 ;;		_Tx_isEmpty
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text21
  1965  00059E                     __ptext21:
  1966                           	opt callstack 0
  1967  00059E                     _EUSART1_Write_task:
  1968                           	opt callstack 26
  1969                           
  1970                           ;eusart1.c: 210: if(!Tx_isEmpty())
  1971                           
  1972                           ; BSR set to: 15
  1973                           ;incstack = 0
  1974  00059E  ECD8  F002         	call	_Tx_isEmpty	;wreg free
  1975  0005A2  0900               	iorlw	0
  1976  0005A4  A4D8               	btfss	status,2,c
  1977  0005A6  0012               	return	
  1978                           
  1979                           ;eusart1.c: 211: TXREG1 = Tx_deQ();
  1980  0005A8  ECC4  F002         	call	_Tx_deQ	;wreg free
  1981  0005AC  6EAD               	movwf	4013,c	;volatile
  1982  0005AE  0012               	return		;funcret
  1983  0005B0                     __end_of_EUSART1_Write_task:
  1984                           	opt callstack 0
  1985                           
  1986 ;; *************** function _Tx_isEmpty *****************
  1987 ;; Defined at:
  1988 ;;		line 338 in file "mcc_generated_files/eusart1.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      unsigned char 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/F
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1
  2002 ;;      Params:         0       0       0
  2003 ;;      Locals:         0       0       0
  2004 ;;      Temps:          0       0       0
  2005 ;;      Totals:         0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    3
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_EUSART1_Write_task
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text22
  2017  0005B0                     __ptext22:
  2018                           	opt callstack 0
  2019  0005B0                     _Tx_isEmpty:
  2020                           	opt callstack 26
  2021                           
  2022                           ;eusart1.c: 340: return Tx_Head==Tx_Tail;
  2023                           
  2024                           ;incstack = 0
  2025  0005B0  5027               	movf	_Tx_Tail,w,c
  2026  0005B2  1829               	xorwf	_Tx_Head,w,c
  2027  0005B4  A4D8               	btfss	status,2,c
  2028  0005B6  D002               	goto	u50
  2029  0005B8  0E01               	movlw	1
  2030  0005BA  0012               	return	
  2031  0005BC                     u50:
  2032  0005BC  0E00               	movlw	0
  2033  0005BE  0012               	return		;funcret
  2034  0005C0                     __end_of_Tx_isEmpty:
  2035                           	opt callstack 0
  2036                           
  2037 ;; *************** function _Tx_deQ *****************
  2038 ;; Defined at:
  2039 ;;		line 342 in file "mcc_generated_files/eusart1.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  data            1    2[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      unsigned char 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/F
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1
  2053 ;;      Params:         0       0       0
  2054 ;;      Locals:         1       0       0
  2055 ;;      Temps:          0       0       0
  2056 ;;      Totals:         1       0       0
  2057 ;;Total ram usage:        1 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    3
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_EUSART1_Write_task
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text23
  2068  000588                     __ptext23:
  2069                           	opt callstack 0
  2070  000588                     _Tx_deQ:
  2071                           	opt callstack 26
  2072                           
  2073                           ;eusart1.c: 343: uint8_t data;;eusart1.c: 344: data = Tx_CQ[Tx_Tail++];
  2074                           
  2075                           ;incstack = 0
  2076  000588  5027               	movf	_Tx_Tail,w,c
  2077  00058A  0F60               	addlw	low _Tx_CQ
  2078  00058C  6ED9               	movwf	fsr2l,c
  2079  00058E  6ADA               	clrf	fsr2h,c
  2080  000590  50DF               	movf	indf2,w,c
  2081  000592  6E3B               	movwf	Tx_deQ@data,c
  2082  000594  2A27               	incf	_Tx_Tail,f,c
  2083                           
  2084                           ;eusart1.c: 345: Tx_Tail&=0x0F;
  2085  000596  0E0F               	movlw	15
  2086  000598  1627               	andwf	_Tx_Tail,f,c
  2087                           
  2088                           ;eusart1.c: 346: return data;
  2089  00059A  503B               	movf	Tx_deQ@data,w,c
  2090  00059C  0012               	return		;funcret
  2091  00059E                     __end_of_Tx_deQ:
  2092                           	opt callstack 0
  2093                           
  2094 ;; *************** function _DRIVER *****************
  2095 ;; Defined at:
  2096 ;;		line 105 in file "main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  _bit            8   11[COMRAM] unsigned char [8]
  2101 ;;  CD4021DriveT    4   23[COMRAM] unsigned long 
  2102 ;;  CD4094DriveT    4   19[COMRAM] unsigned long 
  2103 ;;  i               2   28[COMRAM] int 
  2104 ;;  data            1   27[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/F
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1
  2114 ;;      Params:         0       0       0
  2115 ;;      Locals:        19       0       0
  2116 ;;      Temps:          4       0       0
  2117 ;;      Totals:        23       0       0
  2118 ;;Total ram usage:       23 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    4
  2121 ;; This function calls:
  2122 ;;		_CD4021Driver
  2123 ;;		_CD4021Read
  2124 ;;		_CD4094Driver
  2125 ;;		_CD4094Write8
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text24
  2132  00002C                     __ptext24:
  2133                           	opt callstack 0
  2134  00002C                     _DRIVER:
  2135                           	opt callstack 26
  2136                           
  2137                           ;main.c: 107: uint32_t CD4094DriveTimeCounter = 0;
  2138                           
  2139                           ;incstack = 0
  2140  00002C  0E00               	movlw	0
  2141  00002E  6E4C               	movwf	DRIVER@CD4094DriveTimeCounter,c
  2142  000030  0E00               	movlw	0
  2143  000032  6E4D               	movwf	DRIVER@CD4094DriveTimeCounter+1,c
  2144  000034  0E00               	movlw	0
  2145  000036  6E4E               	movwf	DRIVER@CD4094DriveTimeCounter+2,c
  2146  000038  0E00               	movlw	0
  2147  00003A  6E4F               	movwf	DRIVER@CD4094DriveTimeCounter+3,c
  2148                           
  2149                           ;main.c: 108: uint32_t CD4021DriveTimeCounter = 0;
  2150  00003C  0E00               	movlw	0
  2151  00003E  6E50               	movwf	DRIVER@CD4021DriveTimeCounter,c
  2152  000040  0E00               	movlw	0
  2153  000042  6E51               	movwf	DRIVER@CD4021DriveTimeCounter+1,c
  2154  000044  0E00               	movlw	0
  2155  000046  6E52               	movwf	DRIVER@CD4021DriveTimeCounter+2,c
  2156  000048  0E00               	movlw	0
  2157  00004A  6E53               	movwf	DRIVER@CD4021DriveTimeCounter+3,c
  2158                           
  2159                           ;main.c: 109: uint8_t data;;main.c: 110: bool _bit[8];;main.c: 111: data= CD4021Read();
  2160  00004C  EC08  F003         	call	_CD4021Read	;wreg free
  2161  000050  6E54               	movwf	DRIVER@data,c
  2162                           
  2163                           ;main.c: 112: int i;;main.c: 113: for (i=0; i<8; i++) {
  2164  000052  0E00               	movlw	0
  2165  000054  6E56               	movwf	DRIVER@i+1,c
  2166  000056  0E00               	movlw	0
  2167  000058  6E55               	movwf	DRIVER@i,c
  2168  00005A                     l1457:
  2169  00005A  BE56               	btfsc	DRIVER@i+1,7,c
  2170  00005C  D006               	goto	l1461
  2171  00005E  5056               	movf	DRIVER@i+1,w,c
  2172  000060  E12B               	bnz	l340
  2173  000062  0E08               	movlw	8
  2174  000064  5C55               	subwf	DRIVER@i,w,c
  2175  000066  B0D8               	btfsc	status,0,c
  2176  000068  D027               	goto	l340
  2177  00006A                     l1461:
  2178                           
  2179                           ;main.c: 114: _bit[i] = ((1 << (i % 8)) & data) >> (i % 8);
  2180  00006A  5055               	movf	DRIVER@i,w,c
  2181  00006C  0F44               	addlw	low DRIVER@_bit
  2182  00006E  6ED9               	movwf	fsr2l,c
  2183  000070  6ADA               	clrf	fsr2h,c
  2184  000072  C055  F040         	movff	DRIVER@i,??_DRIVER
  2185  000076  0E07               	movlw	7
  2186  000078  1640               	andwf	??_DRIVER,f,c
  2187  00007A  C055  F041         	movff	DRIVER@i,??_DRIVER+1
  2188  00007E  0E07               	movlw	7
  2189  000080  1641               	andwf	??_DRIVER+1,f,c
  2190  000082  0E01               	movlw	1
  2191  000084  6E42               	movwf	(??_DRIVER+2)& (0+255),c
  2192  000086  0E00               	movlw	0
  2193  000088  6E43               	movwf	(??_DRIVER+3)& (0+255),c
  2194  00008A  2A41               	incf	??_DRIVER+1,f,c
  2195  00008C  D003               	goto	u244
  2196  00008E                     u245:
  2197  00008E  90D8               	bcf	status,0,c
  2198  000090  3642               	rlcf	??_DRIVER+2,f,c
  2199  000092  3643               	rlcf	??_DRIVER+3,f,c
  2200  000094                     u244:
  2201  000094  2E41               	decfsz	??_DRIVER+1,f,c
  2202  000096  D7FB               	goto	u245
  2203  000098  5054               	movf	DRIVER@data,w,c
  2204  00009A  1642               	andwf	??_DRIVER+2,f,c
  2205  00009C  0E00               	movlw	0
  2206  00009E  1643               	andwf	??_DRIVER+3,f,c
  2207  0000A0  2A40               	incf	??_DRIVER,f,c
  2208  0000A2  D003               	goto	u254
  2209  0000A4                     u255:
  2210  0000A4  3443               	rlcf	??_DRIVER+3,w,c
  2211  0000A6  3243               	rrcf	??_DRIVER+3,f,c
  2212  0000A8  3242               	rrcf	??_DRIVER+2,f,c
  2213  0000AA                     u254:
  2214  0000AA  2E40               	decfsz	??_DRIVER,f,c
  2215  0000AC  D7FB               	goto	u255
  2216  0000AE  5042               	movf	??_DRIVER+2,w,c
  2217  0000B0  6EDF               	movwf	indf2,c
  2218  0000B2  4A55               	infsnz	DRIVER@i,f,c
  2219  0000B4  2A56               	incf	DRIVER@i+1,f,c
  2220  0000B6  D7D1               	goto	l1457
  2221  0000B8                     l340:
  2222                           
  2223                           ;main.c: 115: };main.c: 116: HR[0]=_bit[0];
  2224  0000B8  C044  F031         	movff	DRIVER@_bit,_HR
  2225                           
  2226                           ;main.c: 117: HR[1]=_bit[1];
  2227  0000BC  C045  F032         	movff	DRIVER@_bit+1,_HR+1
  2228                           
  2229                           ;main.c: 118: HR[2]=_bit[2];
  2230  0000C0  C046  F033         	movff	DRIVER@_bit+2,_HR+2
  2231                           
  2232                           ;main.c: 120: CD4094Write8(_4094_buf);
  2233  0000C4  5026               	movf	__4094_buf,w,c
  2234  0000C6  ECFF  F002         	call	_CD4094Write8
  2235                           
  2236                           ;main.c: 121: if((timecount - CD4094DriveTimeCounter)>=500){
  2237  0000CA  504C               	movf	DRIVER@CD4094DriveTimeCounter,w,c
  2238  0000CC  5C15               	subwf	_timecount,w,c
  2239  0000CE  6E40               	movwf	??_DRIVER& (0+255),c
  2240  0000D0  504D               	movf	DRIVER@CD4094DriveTimeCounter+1,w,c
  2241  0000D2  5816               	subwfb	_timecount+1,w,c
  2242  0000D4  6E41               	movwf	(??_DRIVER+1)& (0+255),c
  2243  0000D6  504E               	movf	DRIVER@CD4094DriveTimeCounter+2,w,c
  2244  0000D8  5817               	subwfb	_timecount+2,w,c
  2245  0000DA  6E42               	movwf	(??_DRIVER+2)& (0+255),c
  2246  0000DC  504F               	movf	DRIVER@CD4094DriveTimeCounter+3,w,c
  2247  0000DE  5818               	subwfb	_timecount+3,w,c
  2248  0000E0  6E43               	movwf	(??_DRIVER+3)& (0+255),c
  2249  0000E2  5043               	movf	??_DRIVER+3,w,c
  2250  0000E4  1042               	iorwf	??_DRIVER+2,w,c
  2251  0000E6  E105               	bnz	u260
  2252  0000E8  0EF4               	movlw	244
  2253  0000EA  5C40               	subwf	??_DRIVER,w,c
  2254  0000EC  0E01               	movlw	1
  2255  0000EE  5841               	subwfb	??_DRIVER+1,w,c
  2256  0000F0  B0D8               	btfsc	status,0,c
  2257  0000F2                     u260:
  2258                           
  2259                           ;main.c: 123: CD4094Driver();
  2260  0000F2  EC54  F001         	call	_CD4094Driver	;wreg free
  2261                           
  2262                           ;main.c: 124: };main.c: 125: if((timecount - CD4021DriveTimeCounter)>=500){
  2263  0000F6  5050               	movf	DRIVER@CD4021DriveTimeCounter,w,c
  2264  0000F8  5C15               	subwf	_timecount,w,c
  2265  0000FA  6E40               	movwf	??_DRIVER& (0+255),c
  2266  0000FC  5051               	movf	DRIVER@CD4021DriveTimeCounter+1,w,c
  2267  0000FE  5816               	subwfb	_timecount+1,w,c
  2268  000100  6E41               	movwf	(??_DRIVER+1)& (0+255),c
  2269  000102  5052               	movf	DRIVER@CD4021DriveTimeCounter+2,w,c
  2270  000104  5817               	subwfb	_timecount+2,w,c
  2271  000106  6E42               	movwf	(??_DRIVER+2)& (0+255),c
  2272  000108  5053               	movf	DRIVER@CD4021DriveTimeCounter+3,w,c
  2273  00010A  5818               	subwfb	_timecount+3,w,c
  2274  00010C  6E43               	movwf	(??_DRIVER+3)& (0+255),c
  2275  00010E  5043               	movf	??_DRIVER+3,w,c
  2276  000110  1042               	iorwf	??_DRIVER+2,w,c
  2277  000112  E106               	bnz	u270
  2278  000114  0EF4               	movlw	244
  2279  000116  5C40               	subwf	??_DRIVER,w,c
  2280  000118  0E01               	movlw	1
  2281  00011A  5841               	subwfb	??_DRIVER+1,w,c
  2282  00011C  A0D8               	btfss	status,0,c
  2283  00011E  0012               	return	
  2284  000120                     u270:
  2285                           
  2286                           ;main.c: 127: CD4021Driver();
  2287  000120  EC1B  F001         	call	_CD4021Driver	;wreg free
  2288  000124  0012               	return		;funcret
  2289  000126                     __end_of_DRIVER:
  2290                           	opt callstack 0
  2291                           
  2292 ;; *************** function _CD4094Write8 *****************
  2293 ;; Defined at:
  2294 ;;		line 50 in file "CD4094.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  Buffer          1    wreg     unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  Buffer          1    2[COMRAM] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/F
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1
  2308 ;;      Params:         0       0       0
  2309 ;;      Locals:         1       0       0
  2310 ;;      Temps:          0       0       0
  2311 ;;      Totals:         1       0       0
  2312 ;;Total ram usage:        1 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    3
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_DRIVER
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text25
  2323  0005FE                     __ptext25:
  2324                           	opt callstack 0
  2325  0005FE                     _CD4094Write8:
  2326                           	opt callstack 26
  2327                           
  2328                           ;incstack = 0
  2329                           ;CD4094Write8@Buffer stored from wreg
  2330  0005FE  6E3B               	movwf	CD4094Write8@Buffer,c
  2331                           
  2332                           ;CD4094.c: 52: CD4094Buffer=Buffer;
  2333  000600  C03B  F023         	movff	CD4094Write8@Buffer,_CD4094Buffer
  2334  000604  0012               	return		;funcret
  2335  000606                     __end_of_CD4094Write8:
  2336                           	opt callstack 0
  2337                           
  2338 ;; *************** function _CD4094Driver *****************
  2339 ;; Defined at:
  2340 ;;		line 21 in file "CD4094.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  i               2    4[COMRAM] int 
  2345 ;;  temp            1    3[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/F
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1
  2355 ;;      Params:         0       0       0
  2356 ;;      Locals:         3       0       0
  2357 ;;      Temps:          1       0       0
  2358 ;;      Totals:         4       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    3
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_DRIVER
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text26
  2370  0002A8                     __ptext26:
  2371                           	opt callstack 0
  2372  0002A8                     _CD4094Driver:
  2373                           	opt callstack 26
  2374                           
  2375                           ;CD4094.c: 23: uint8_t temp;;CD4094.c: 24: temp=CD4094Buffer;
  2376                           
  2377                           ;incstack = 0
  2378  0002A8  C023  F03C         	movff	_CD4094Buffer,CD4094Driver@temp
  2379                           
  2380                           ;CD4094.c: 25: LATAbits.LATA1=0;
  2381  0002AC  9289               	bcf	3977,1,c	;volatile
  2382                           
  2383                           ;CD4094.c: 26: __nop();
  2384  0002AE  F000               	nop	
  2385                           
  2386                           ;CD4094.c: 27: __nop();
  2387  0002B0  F000               	nop	
  2388                           
  2389                           ;CD4094.c: 28: LATAbits.LATA0=0;
  2390  0002B2  9089               	bcf	3977,0,c	;volatile
  2391                           
  2392                           ;CD4094.c: 29: __nop();
  2393  0002B4  F000               	nop	
  2394                           
  2395                           ;CD4094.c: 30: __nop();
  2396  0002B6  F000               	nop	
  2397                           
  2398                           ;CD4094.c: 31: LATAbits.LATA2=0;
  2399  0002B8  9489               	bcf	3977,2,c	;volatile
  2400                           
  2401                           ;CD4094.c: 32: for(int i=0;i<8;i++){
  2402  0002BA  0E00               	movlw	0
  2403  0002BC  6E3E               	movwf	CD4094Driver@i+1,c
  2404  0002BE  0E00               	movlw	0
  2405  0002C0  6E3D               	movwf	CD4094Driver@i,c
  2406  0002C2                     l413:
  2407                           
  2408                           ;CD4094.c: 33: __nop();
  2409  0002C2  F000               	nop	
  2410                           
  2411                           ;CD4094.c: 34: __nop();
  2412  0002C4  F000               	nop	
  2413                           
  2414                           ;CD4094.c: 35: LATAbits.LATA1=(temp&0x01);
  2415  0002C6  C03C  F03B         	movff	CD4094Driver@temp,??_CD4094Driver
  2416  0002CA  0E01               	movlw	1
  2417  0002CC  163B               	andwf	??_CD4094Driver,f,c
  2418  0002CE  463B               	rlncf	??_CD4094Driver,f,c
  2419  0002D0  5089               	movf	3977,w,c	;volatile
  2420  0002D2  183B               	xorwf	??_CD4094Driver,w,c
  2421  0002D4  0BFD               	andlw	-3
  2422  0002D6  183B               	xorwf	??_CD4094Driver,w,c
  2423  0002D8  6E89               	movwf	3977,c	;volatile
  2424                           
  2425                           ;CD4094.c: 36: LATAbits.LATA2=1;
  2426  0002DA  8489               	bsf	3977,2,c	;volatile
  2427                           
  2428                           ;CD4094.c: 37: __nop();
  2429  0002DC  F000               	nop	
  2430                           
  2431                           ;CD4094.c: 38: __nop();
  2432  0002DE  F000               	nop	
  2433                           
  2434                           ;CD4094.c: 39: LATAbits.LATA2=0;
  2435  0002E0  9489               	bcf	3977,2,c	;volatile
  2436                           
  2437                           ;CD4094.c: 40: if(i==7){
  2438  0002E2  0E07               	movlw	7
  2439  0002E4  183D               	xorwf	CD4094Driver@i,w,c
  2440  0002E6  103E               	iorwf	CD4094Driver@i+1,w,c
  2441  0002E8  A4D8               	btfss	status,2,c
  2442  0002EA  D004               	goto	l1331
  2443                           
  2444                           ;CD4094.c: 41: LATAbits.LATA0=1;
  2445  0002EC  8089               	bsf	3977,0,c	;volatile
  2446                           
  2447                           ;CD4094.c: 42: __nop();
  2448  0002EE  F000               	nop	
  2449                           
  2450                           ;CD4094.c: 43: __nop();
  2451  0002F0  F000               	nop	
  2452                           
  2453                           ;CD4094.c: 44: LATAbits.LATA0=0;
  2454  0002F2  9089               	bcf	3977,0,c	;volatile
  2455  0002F4                     l1331:
  2456                           
  2457                           ;CD4094.c: 45: };CD4094.c: 46: temp>>=1;
  2458  0002F4  90D8               	bcf	status,0,c
  2459  0002F6  323C               	rrcf	CD4094Driver@temp,f,c
  2460  0002F8  4A3D               	infsnz	CD4094Driver@i,f,c
  2461  0002FA  2A3E               	incf	CD4094Driver@i+1,f,c
  2462  0002FC  BE3E               	btfsc	CD4094Driver@i+1,7,c
  2463  0002FE  D7E1               	goto	l413
  2464  000300  503E               	movf	CD4094Driver@i+1,w,c
  2465  000302  E105               	bnz	u100
  2466  000304  0E08               	movlw	8
  2467  000306  5C3D               	subwf	CD4094Driver@i,w,c
  2468  000308  B0D8               	btfsc	status,0,c
  2469  00030A  0012               	return	
  2470  00030C  D7DA               	goto	l413
  2471  00030E                     u100:
  2472  00030E  0012               	return		;funcret
  2473  000310                     __end_of_CD4094Driver:
  2474                           	opt callstack 0
  2475                           
  2476 ;; *************** function _CD4021Read *****************
  2477 ;; Defined at:
  2478 ;;		line 45 in file "CD4021.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      unsigned char 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/F
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1
  2492 ;;      Params:         0       0       0
  2493 ;;      Locals:         0       0       0
  2494 ;;      Temps:          0       0       0
  2495 ;;      Totals:         0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    3
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_DRIVER
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text27
  2507  000610                     __ptext27:
  2508                           	opt callstack 0
  2509  000610                     _CD4021Read:
  2510                           	opt callstack 26
  2511                           
  2512                           ;CD4021.c: 46: return CD4021Buffer;
  2513                           
  2514                           ;incstack = 0
  2515  000610  5024               	movf	_CD4021Buffer,w,c
  2516  000612  0012               	return		;funcret
  2517  000614                     __end_of_CD4021Read:
  2518                           	opt callstack 0
  2519                           
  2520 ;; *************** function _CD4021Driver *****************
  2521 ;; Defined at:
  2522 ;;		line 16 in file "CD4021.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  i               2    5[COMRAM] int 
  2527 ;;  temp            2    3[COMRAM] int 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/F
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1
  2537 ;;      Params:         0       0       0
  2538 ;;      Locals:         4       0       0
  2539 ;;      Temps:          1       0       0
  2540 ;;      Totals:         5       0       0
  2541 ;;Total ram usage:        5 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    3
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_DRIVER
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text28
  2552  000236                     __ptext28:
  2553                           	opt callstack 0
  2554  000236                     _CD4021Driver:
  2555                           	opt callstack 26
  2556                           
  2557                           ;CD4021.c: 18: int temp=0;
  2558                           
  2559                           ;incstack = 0
  2560  000236  0E00               	movlw	0
  2561  000238  6E3D               	movwf	CD4021Driver@temp+1,c
  2562  00023A  0E00               	movlw	0
  2563  00023C  6E3C               	movwf	CD4021Driver@temp,c
  2564                           
  2565                           ;CD4021.c: 19: int i;;CD4021.c: 20: LATBbits.LATB2=0;
  2566  00023E  948A               	bcf	3978,2,c	;volatile
  2567                           
  2568                           ;CD4021.c: 21: LATBbits.LATB0=0;
  2569  000240  908A               	bcf	3978,0,c	;volatile
  2570                           
  2571                           ;CD4021.c: 22: __nop();
  2572  000242  F000               	nop	
  2573                           
  2574                           ;CD4021.c: 23: __nop();
  2575  000244  F000               	nop	
  2576                           
  2577                           ;CD4021.c: 24: LATBbits.LATB0=1;
  2578  000246  808A               	bsf	3978,0,c	;volatile
  2579                           
  2580                           ;CD4021.c: 25: __nop();
  2581  000248  F000               	nop	
  2582                           
  2583                           ;CD4021.c: 26: __nop();
  2584  00024A  F000               	nop	
  2585                           
  2586                           ;CD4021.c: 27: LATBbits.LATB0=0;
  2587  00024C  908A               	bcf	3978,0,c	;volatile
  2588                           
  2589                           ;CD4021.c: 29: for(i=0;i<8;i++){
  2590  00024E  0E00               	movlw	0
  2591  000250  6E3F               	movwf	CD4021Driver@i+1,c
  2592  000252  0E00               	movlw	0
  2593  000254  6E3E               	movwf	CD4021Driver@i,c
  2594  000256                     l1359:
  2595                           
  2596                           ;CD4021.c: 30: temp= temp|(PORTBbits.RB1);
  2597  000256  A281               	btfss	3969,1,c	;volatile
  2598  000258  D003               	goto	u110
  2599  00025A  6A3B               	clrf	??_CD4021Driver& (0+255),c
  2600  00025C  2A3B               	incf	??_CD4021Driver& (0+255),f,c
  2601  00025E  D001               	goto	u118
  2602  000260                     u110:
  2603  000260  6A3B               	clrf	??_CD4021Driver& (0+255),c
  2604  000262                     u118:
  2605  000262  503C               	movf	CD4021Driver@temp,w,c
  2606  000264  103B               	iorwf	??_CD4021Driver,w,c
  2607  000266  6E3C               	movwf	CD4021Driver@temp,c
  2608  000268  503D               	movf	CD4021Driver@temp+1,w,c
  2609  00026A  6E3D               	movwf	CD4021Driver@temp+1,c
  2610                           
  2611                           ;CD4021.c: 31: __nop();
  2612  00026C  F000               	nop	
  2613                           
  2614                           ;CD4021.c: 32: __nop();
  2615  00026E  F000               	nop	
  2616                           
  2617                           ;CD4021.c: 33: LATBbits.LATB2=1;
  2618  000270  848A               	bsf	3978,2,c	;volatile
  2619                           
  2620                           ;CD4021.c: 34: __nop();
  2621  000272  F000               	nop	
  2622                           
  2623                           ;CD4021.c: 35: __nop();
  2624  000274  F000               	nop	
  2625                           
  2626                           ;CD4021.c: 38: LATBbits.LATB2=0;
  2627  000276  948A               	bcf	3978,2,c	;volatile
  2628                           
  2629                           ;CD4021.c: 39: if(i<7)
  2630  000278  BE3F               	btfsc	CD4021Driver@i+1,7,c
  2631  00027A  D006               	goto	u120
  2632  00027C  503F               	movf	CD4021Driver@i+1,w,c
  2633  00027E  E107               	bnz	l400
  2634  000280  0E07               	movlw	7
  2635  000282  5C3E               	subwf	CD4021Driver@i,w,c
  2636  000284  B0D8               	btfsc	status,0,c
  2637  000286  D003               	goto	l400
  2638  000288                     u120:
  2639                           
  2640                           ;CD4021.c: 40: temp<<=1;
  2641  000288  90D8               	bcf	status,0,c
  2642  00028A  363C               	rlcf	CD4021Driver@temp,f,c
  2643  00028C  363D               	rlcf	CD4021Driver@temp+1,f,c
  2644  00028E                     l400:
  2645  00028E  4A3E               	infsnz	CD4021Driver@i,f,c
  2646  000290  2A3F               	incf	CD4021Driver@i+1,f,c
  2647  000292  BE3F               	btfsc	CD4021Driver@i+1,7,c
  2648  000294  D7E0               	goto	l1359
  2649  000296  503F               	movf	CD4021Driver@i+1,w,c
  2650  000298  E104               	bnz	u130
  2651  00029A  0E08               	movlw	8
  2652  00029C  5C3E               	subwf	CD4021Driver@i,w,c
  2653  00029E  A0D8               	btfss	status,0,c
  2654  0002A0  D7DA               	goto	l1359
  2655  0002A2                     u130:
  2656                           
  2657                           ;CD4021.c: 41: };CD4021.c: 42: CD4021Buffer=temp;
  2658  0002A2  C03C  F024         	movff	CD4021Driver@temp,_CD4021Buffer
  2659                           
  2660                           ;CD4021.c: 43: return;
  2661  0002A6  0012               	return		;funcret
  2662  0002A8                     __end_of_CD4021Driver:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _INTERRUPT_InterruptManager *****************
  2666 ;; Defined at:
  2667 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1
  2681 ;;      Params:         0       0       0
  2682 ;;      Locals:         0       0       0
  2683 ;;      Temps:          2       0       0
  2684 ;;      Totals:         2       0       0
  2685 ;;Total ram usage:        2 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    2
  2688 ;; This function calls:
  2689 ;;		_TMR0_ISR
  2690 ;; This function is called by:
  2691 ;;		Interrupt level 2
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	intcode
  2696  000008                     __pintcode:
  2697                           	opt callstack 0
  2698  000008                     _INTERRUPT_InterruptManager:
  2699                           	opt callstack 22
  2700                           
  2701                           ;incstack = 0
  2702  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2703  00000A  CFFA F039          	movff	pclath,??_INTERRUPT_InterruptManager
  2704  00000E  CFFB F03A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2705                           
  2706                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2707  000012  BAF2               	btfsc	4082,5,c	;volatile
  2708  000014  A4F2               	btfss	4082,2,c	;volatile
  2709  000016  D002               	goto	i2l64
  2710                           
  2711                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  2712  000018  EC4F  F002         	call	_TMR0_ISR	;wreg free
  2713  00001C                     i2l64:
  2714  00001C  C03A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2715  000020  C039  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2716  000024  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2717  000026  0011               	retfie		f
  2718  000028                     __end_of_INTERRUPT_InterruptManager:
  2719                           	opt callstack 0
  2720                           
  2721 ;; *************** function _TMR0_ISR *****************
  2722 ;; Defined at:
  2723 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1
  2737 ;;      Params:         0       0       0
  2738 ;;      Locals:         0       0       0
  2739 ;;      Temps:          0       0       0
  2740 ;;      Totals:         0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		Absolute function
  2746 ;;		_TMR0_DefaultInterruptHandler
  2747 ;; This function is called by:
  2748 ;;		_INTERRUPT_InterruptManager
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text30
  2753  00049E                     __ptext30:
  2754                           	opt callstack 0
  2755  00049E                     _TMR0_ISR:
  2756                           	opt callstack 22
  2757                           
  2758                           ;tmr0.c: 134: INTCONbits.TMR0IF = 0;
  2759                           
  2760                           ;incstack = 0
  2761  00049E  94F2               	bcf	4082,2,c	;volatile
  2762                           
  2763                           ;tmr0.c: 137: TMR0L = timer0ReloadVal;
  2764  0004A0  C05B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  2765                           
  2766                           ;tmr0.c: 139: if(TMR0_InterruptHandler)
  2767  0004A4  5057               	movf	_TMR0_InterruptHandler,w,c
  2768  0004A6  1058               	iorwf	_TMR0_InterruptHandler+1,w,c
  2769  0004A8  B4D8               	btfsc	status,2,c
  2770  0004AA  0012               	return	
  2771                           
  2772                           ;tmr0.c: 140: {;tmr0.c: 141: TMR0_InterruptHandler();
  2773  0004AC  D801               	call	i2u18_48
  2774  0004AE  0012               	return	
  2775  0004B0                     i2u18_48:
  2776  0004B0  0005               	push	
  2777  0004B2  6EFA               	movwf	pclath,c
  2778  0004B4  5057               	movf	_TMR0_InterruptHandler,w,c
  2779  0004B6  6EFD               	movwf	tosl,c
  2780  0004B8  5058               	movf	_TMR0_InterruptHandler+1,w,c
  2781  0004BA  6EFE               	movwf	tosh,c
  2782  0004BC  50F8               	movf	tblptru,w,c
  2783  0004BE  6EFF               	movwf	tosu,c
  2784  0004C0  50FA               	movf	pclath,w,c
  2785  0004C2  0012               	return		;indir
  2786  0004C4                     __end_of_TMR0_ISR:
  2787                           	opt callstack 0
  2788                           
  2789 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2790 ;; Defined at:
  2791 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1
  2805 ;;      Params:         0       0       0
  2806 ;;      Locals:         0       0       0
  2807 ;;      Temps:          0       0       0
  2808 ;;      Totals:         0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_TMR0_Initialize
  2815 ;;		_TMR0_ISR
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text31
  2820  0005DC                     __ptext31:
  2821                           	opt callstack 0
  2822  0005DC                     _TMR0_DefaultInterruptHandler:
  2823                           	opt callstack 22
  2824                           
  2825                           ;tmr0.c: 155: timecount++;
  2826                           
  2827                           ;incstack = 0
  2828  0005DC  0E01               	movlw	1
  2829  0005DE  2615               	addwf	_timecount,f,c
  2830  0005E0  0E00               	movlw	0
  2831  0005E2  2216               	addwfc	_timecount+1,f,c
  2832  0005E4  2217               	addwfc	_timecount+2,f,c
  2833  0005E6  2218               	addwfc	_timecount+3,f,c
  2834  0005E8  0012               	return		;funcret
  2835  0005EA                     __end_of_TMR0_DefaultInterruptHandler:
  2836                           	opt callstack 0
  2837  0000                     
  2838                           	psect	text32
  2839  000000                     __ptext32:
  2840                           	opt callstack 0
  2841                           
  2842                           	psect	rparam
  2843  0000                     
  2844                           	psect	temp
  2845  00005C                     btemp:
  2846                           	opt callstack 0
  2847  00005C                     	ds	1
  2848  0000                     int$flags	set	btemp
  2849  0000                     wtemp8	set	btemp+1
  2850  0000                     ttemp5	set	btemp+1
  2851  0000                     ttemp6	set	btemp+4
  2852  0000                     ttemp7	set	btemp+8
  2853                           tosu	equ	0xFFF
  2854                           tosh	equ	0xFFE
  2855                           tosl	equ	0xFFD
  2856                           stkptr	equ	0xFFC
  2857                           pclatu	equ	0xFFB
  2858                           pclath	equ	0xFFA
  2859                           pcl	equ	0xFF9
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           prodh	equ	0xFF4
  2865                           prodl	equ	0xFF3
  2866                           indf0	equ	0xFEF
  2867                           postinc0	equ	0xFEE
  2868                           postdec0	equ	0xFED
  2869                           preinc0	equ	0xFEC
  2870                           plusw0	equ	0xFEB
  2871                           fsr0h	equ	0xFEA
  2872                           fsr0l	equ	0xFE9
  2873                           wreg	equ	0xFE8
  2874                           indf1	equ	0xFE7
  2875                           postinc1	equ	0xFE6
  2876                           postdec1	equ	0xFE5
  2877                           preinc1	equ	0xFE4
  2878                           plusw1	equ	0xFE3
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           bsr	equ	0xFE0
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           preinc2	equ	0xFDC
  2886                           plusw2	equ	0xFDB
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         144
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      91
    BANK0           160      0      88
    BANK1           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 32
		 -> MB_CMD_Buffer(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> MB_CMD_Buffer(BANK0[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> MB_CMD_Buffer(BANK0[32]), 

    HR_read@p	PTR unsigned int  size(1) Largest target is 8
		 -> HR(COMRAM[8]), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_DRIVER
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _MB_handler->_HR_read
    _HR_single_write->_memset
    _HR_read->_memset
    _write_ACK->_EUSART1_Write
    _EUSART1_Write->_Tx_enQ
    _EUSART1_Read->_Rx_deQ
    _EUSART1_Write_task->_Tx_deQ
    _DRIVER->_CD4021Driver

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2468
                             _DRIVER
                 _EUSART1_Write_task
                   _Initial_Variable
                        _Modbus_Read
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Modbus_Read                                          4     4      0    1972
                                             17 COMRAM     4     4      0
                       _EUSART1_Read
                         _HR_handler
                         _MB_handler
                         _Rx_isEmpty
 ---------------------------------------------------------------------------------
 (2) _Rx_isEmpty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MB_handler                                           0     0      0    1836
                            _HR_read
                    _HR_single_write
 ---------------------------------------------------------------------------------
 (3) _HR_single_write                                      5     5      0     871
                                              8 COMRAM     5     5      0
                             _memset
                          _write_ACK
 ---------------------------------------------------------------------------------
 (3) _HR_read                                              9     9      0     965
                                              8 COMRAM     9     9      0
                             _memset
                          _write_ACK
 ---------------------------------------------------------------------------------
 (4) _write_ACK                                            2     2      0     112
                                              4 COMRAM     2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      44
                                              3 COMRAM     1     1      0
                             _Tx_enQ
 ---------------------------------------------------------------------------------
 (6) _Tx_enQ                                               1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _memset                                               6     1      5     552
                                              2 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (2) _HR_handler                                           5     5      0     113
                                              2 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0      23
                             _Rx_deQ
 ---------------------------------------------------------------------------------
 (3) _Rx_deQ                                               1     1      0      23
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initial_Variable                                     2     2      0      45
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_task                                   0     0      0      23
                             _Tx_deQ
                         _Tx_isEmpty
 ---------------------------------------------------------------------------------
 (2) _Tx_isEmpty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Tx_deQ                                               1     1      0      23
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DRIVER                                              23    23      0     330
                                              7 COMRAM    23    23      0
                       _CD4021Driver
                         _CD4021Read
                       _CD4094Driver
                       _CD4094Write8
 ---------------------------------------------------------------------------------
 (2) _CD4094Write8                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CD4094Driver                                         4     4      0      60
                                              2 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CD4021Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CD4021Driver                                         5     5      0      75
                                              2 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DRIVER
     _CD4021Driver
     _CD4021Read
     _CD4094Driver
     _CD4094Write8
   _EUSART1_Write_task
     _Tx_deQ
     _Tx_isEmpty
   _Initial_Variable
   _Modbus_Read
     _EUSART1_Read
       _Rx_deQ
     _HR_handler
     _MB_handler
       _HR_read
         _memset
         _write_ACK
           _EUSART1_Write
             _Tx_enQ
       _HR_single_write
         _memset
         _write_ACK
           _EUSART1_Write
             _Tx_enQ
     _Rx_isEmpty
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      58       4       55.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      5B       1       96.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3       6        0.0%
DATA                 0      0      B3       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Dec 17 02:49:31 2020

                _eusart1TxBufferRemaining 005A                                        _HR 0031  
                                      u50 05BC                           _timer0ReloadVal 005B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                             __CFG_LVP$ON 000000                                       l400 028E  
                                     l340 00B8                                       l413 02C2  
                            __CFG_CPB$OFF 000000                                       u100 030E  
                                     u110 0260                                       u120 0288  
                                     u200 041E                                       u130 02A2  
                                     u118 0262                                       u410 0218  
                                     u260 00F2                                       u244 0094  
                                     u340 05D8                                       u245 008E  
                                     u270 0120                                       u254 00AA  
                                     u255 00A4                              __CFG_CPD$OFF 000000  
                                     u380 03B4                                       u374 0398  
                                     u375 0394                                       tosl 000FFD  
                                     wreg 000FE8                 __size_of_Initial_Variable 0030  
                                    l1331 02F4                                      l1511 0512  
                                    l1427 03FE                                      l1523 04D6  
                                    l1515 0522                                      l1461 006A  
                                    l1359 0256                                      l1631 037C  
                                    l1519 04CA                                      l1551 015C  
                                    l1623 0468                                      l1457 005A  
                                    l1617 045C                                      l1563 018E  
                                    l1619 0462                                      l1577 0338  
                                    l1659 01F0                                      l1677 0538  
                                    _MBID 0059                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    i2l64 001C                                      _WPUB 000F61  
                           _EUSART1_Write 05F4                                      _main 052C  
                           ?_EUSART1_Read 0039                           __end_of_HR_read 01C2  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005C                             __CFG_BORV$190 000000  
                                    prodl 000FF3                                      start 0028  
                           __CFG_IESO$OFF 000000                              ___param_bank 000000  
                        CD4021Driver@temp 003C                   __end_of_TMR0_Initialize 050A  
          ??_TMR0_DefaultInterruptHandler 0039            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 05CE                          HR_single_write@i 0043  
                        HR_single_write@u 0044                     _eusart1RxStatusBuffer 0080  
                            ??_CD4021Read 003B                                     ?_main 0039  
                                   _T0CON 000FD5                            __CFG_DEBUG$OFF 000000  
                             ?_MB_handler 0039                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                 ?_TMR0_SetInterruptHandler 003B  
                 __end_of_HR_single_write 0374                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                                   _Rx_CQ 0070                                     _Tx_CQ 0060  
                        __end_of_TMR0_ISR 04C4                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __CFG_MCLRE$EXTMCLR 000000  
                          ?_EUSART1_Write 0039                                     pclath 000FFA  
                             ?_HR_handler 0039                            ??_EUSART1_Read 003C  
                                   ttemp5 005D                                     ttemp6 0060  
                                   ttemp7 0064                                     status 000FD8  
                                   wtemp8 005D                             ??_Modbus_Read 004A  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                      __end_of_CD4021Read 0614                           __initialization 0478  
              __end_of_EUSART1_Initialize 03F2                              __end_of_main 0546  
             ?_INTERRUPT_InterruptManager 0039                             _MB_CMD_Buffer 0098  
                                  ??_main 0057                             __activetblptr 000002  
                               ??_HR_read 0041                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _DRIVER 002C                            __CFG_WDTEN$OFF 000000  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                       __size_of_MB_handler 0028  
                          __CFG_XINST$OFF 000000                                    _Rx_deQ 0572  
                                  _Tx_deQ 0588                                    _Tx_enQ 055C  
                     __end_of_Modbus_Read 0236                            __CFG_STVREN$ON 000000  
                              Rx_deQ@data 003B                          ?_TMR0_Initialize 0039  
                                  _memset 04C4                                    clear_0 047E  
                                  clear_1 048A                       __size_of_HR_handler 0046  
                              _Rx_isEmpty 05CE                                    tblptru 000FF8  
                        ?_HR_single_write 0039                           ??_EUSART1_Write 003C  
TMR0_SetInterruptHandler@InterruptHandler 003B                          _Initial_Variable 03F2  
                         _eusart1RxBuffer 0088                                Tx_deQ@data 003B  
           __size_of_INTERRUPT_Initialize 0004                           _eusart1TxBuffer 0090  
                              _Tx_isEmpty 05B0                         _SYSTEM_Initialize 0546  
                              __accesstop 0060                   __end_of__initialization 0490  
                              Tx_enQ@data 003B                        ?_SYSTEM_Initialize 0039  
                           ___rparam_used 000001                             CD4021Driver@i 003E  
                          __pcstackCOMRAM 0039                __end_of_EUSART1_Write_task 05B0  
                     ??_SYSTEM_Initialize 003D                                 ?_TMR0_ISR 0039  
                           ?_CD4021Driver 0039                         Initial_Variable@i 003B  
                    __end_of_EUSART1_Read 060C                             ?_CD4094Driver 0039  
            DRIVER@CD4021DriveTimeCounter 0050                             ?_CD4094Write8 0039  
               __end_of_SYSTEM_Initialize 055C                             _eusart1RxHead 002E  
                           _eusart1TxHead 0030                             _eusart1RxTail 002D  
                                 DRIVER@i 0055                                   ?_DRIVER 0039  
                              __pbssBANK0 0060                             _eusart1TxTail 002F  
       _EUSART1_TxDefaultInterruptHandler 0021                      Modbus_Read@MB_D_time 0011  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0057  
                             _Modbus_Read 01C2                             CD4094Driver@i 003D  
                      __CFG_CCP2MX$PORTC1 000000                                   ?_Rx_deQ 0039  
                                 ?_Tx_deQ 0039                                   ?_Tx_enQ 0039  
        __end_of_TMR0_SetInterruptHandler 05F4                                ??_TMR0_ISR 0039  
                      __CFG_CCP3MX$PORTB5 000000                            ??_CD4021Driver 003B  
                                 ?_memset 003B                              ??_MB_handler 004A  
                          ??_CD4094Driver 003B                               ?_Rx_isEmpty 0039  
                                 _OSCCON2 000FD2                                   i2u18_48 04B0  
                                 _OSCTUNE 000F9B                            ??_CD4094Write8 003B  
                                 _SPBRGH1 000FB0                                   _HR_read 0126  
                             ?_Tx_isEmpty 0039                           __size_of_DRIVER 00FA  
                            ??_HR_handler 003B                        __size_of_write_ACK 0022  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                        __end_of_MB_handler 0478  
                                 _Rx_Head 002A                                   _Rx_Tail 0028  
                                 _Tx_Head 0029                                   _Tx_Tail 0027  
                         __size_of_Rx_deQ 0016                           __size_of_Tx_deQ 0016  
                         __size_of_Tx_enQ 0016                                   __pcinit 0478  
                         __size_of_memset 0024                                   __ramtop 0200  
                                 __ptext0 052C                                   __ptext1 0546  
                                 __ptext2 04E8                                   __ptext3 05EA  
                                 __ptext4 0422                                   __ptext5 05C0  
                                 __ptext6 060C                                   __ptext7 03BA  
                                 __ptext8 01C2                                   __ptext9 05CE  
                      __end_of_HR_handler 03BA                     _OSCILLATOR_Initialize 05C0  
                      _EUSART1_Initialize 03BA                  ??_PIN_MANAGER_Initialize 003B  
                               __4094_buf 0026                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 0490                       ?_EUSART1_Initialize 0039  
                                 memset@c 003C                                   memset@n 003E  
                                 memset@p 0040                             __Lmediumconst 0000  
             _EUSART1_OverrunErrorHandler 001B                       __size_of_Rx_isEmpty 000E  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                     __size_of_EUSART1_Read 0006  
                __end_of_Initial_Variable 0422                      ??_EUSART1_Initialize 003B  
                     __size_of_Tx_isEmpty 0010                  _TMR0_SetInterruptHandler 05EA  
                               _PORTBbits 000F81                         __end_of_write_ACK 052C  
                              DRIVER@_bit 0044                                DRIVER@data 0054  
                             HR_handler@i 003E                       EUSART1_Write@txData 003C  
                    __end_of_CD4021Driver 02A8                            __end_of_DRIVER 0126  
                            _EUSART1_Read 0606                      __end_of_CD4094Driver 0310  
                    __end_of_CD4094Write8 0606              __end_of_INTERRUPT_Initialize 0610  
                          __end_of_Rx_deQ 0588                            __end_of_Tx_deQ 059E  
                          __end_of_Tx_enQ 0572                         __size_of_TMR0_ISR 0026  
                  ?_OSCILLATOR_Initialize 0039                            __end_of_memset 04E8  
                     start_initialization 0478                        _EUSART1_Write_task 059E  
                __size_of_TMR0_Initialize 0022           __size_of_PIN_MANAGER_Initialize 002E  
                   __end_of_EUSART1_Write 05FE                                  ??_DRIVER 0040  
                     ?_EUSART1_Write_task 0039                  __size_of_HR_single_write 0064  
                            ?_Modbus_Read 0039                                  ??_Rx_deQ 003B  
                                ??_Tx_deQ 003B                                  ??_Tx_enQ 003B  
                    ??_EUSART1_Write_task 003C                                  ??_memset 0040  
                          _eusart1RxCount 002C                               __pbssCOMRAM 0001  
                            ??_Rx_isEmpty 003B         _EUSART1_RxDefaultInterruptHandler 001F  
                                ?_HR_read 0039                              ??_Tx_isEmpty 003B  
                        CD4094Driver@temp 003C                     _TMR0_InterruptHandler 0057  
                  _PIN_MANAGER_Initialize 0422                                 __pintcode 0008  
                      __end_of_Rx_isEmpty 05DC                       HR_single_write@addr 0041  
            ??_INTERRUPT_InterruptManager 0039                          __CFG_PRICLKEN$ON 000000  
                              _CD4021Read 0610                        __end_of_Tx_isEmpty 05C0  
                                HR_read@i 0046                                  HR_read@j 0047  
                                HR_read@n 0043                                  HR_read@p 0045  
                                HR_read@u 0048                                  _BAUDCON1 000FB8  
                    _EUSART1_ErrorHandler 0019                     __size_of_CD4021Driver 0072  
                      CD4094Write8@Buffer 003B                      _INTERRUPT_Initialize 060C  
                   __size_of_CD4094Driver 0068                         ??_TMR0_Initialize 003D  
            DRIVER@CD4094DriveTimeCounter 004C                                  _LATAbits 000F89  
                                _LATBbits 000F8A                     __size_of_CD4094Write8 0008  
                                _PIE1bits 000F9D       __size_of_INTERRUPT_InterruptManager 0020  
              ??_TMR0_SetInterruptHandler 003D                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                         ??_HR_single_write 0041  
                                _TMR0_ISR 049E                                 _timecount 0015  
                       ?_Initial_Variable 0039                              _CD4021Buffer 0024  
                            _CD4021Driver 0236                        ??_Initial_Variable 003B  
                            _CD4094Buffer 0023                              _CD4094Driver 02A8  
                               _write_ACK 050A                              _CD4094Write8 05FE  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0039  
                        __size_of_HR_read 009C                                  __Hrparam 0000  
                    __size_of_Modbus_Read 0074                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 003B               __size_of_EUSART1_Initialize 0038  
                             ?_CD4021Read 0039                                ?_write_ACK 0039  
                                __ptext10 0450                                  __ptext11 0310  
                                __ptext20 03F2                                  __ptext12 0126  
                                __ptext21 059E                                  __ptext13 050A  
                                __ptext30 049E                                  __ptext22 05B0  
                                __ptext14 05F4                                  __ptext31 05DC  
                                __ptext23 0588                                  __ptext15 055C  
                                __ptext32 0000                                  __ptext24 002C  
                                __ptext16 04C4                                  __ptext25 05FE  
                                __ptext17 0374                                  __ptext26 02A8  
                                __ptext18 0606                                  __ptext27 0610  
                                __ptext19 0572                                  __ptext28 0236  
                        Modbus_Read@index 0025                             __size_of_main 001A  
    __end_of_TMR0_DefaultInterruptHandler 05EA     __size_of_TMR0_DefaultInterruptHandler 000E  
            _TMR0_DefaultInterruptHandler 05DC                                write_ACK@i 003E  
                                int$flags 005C        __end_of_INTERRUPT_InterruptManager 0028  
              _INTERRUPT_InterruptManager 0008               _EUSART1_FramingErrorHandler 001D  
                              _MB_ACK_buf 0001                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 003B                                  memset@p1 003B  
                           write_ACK@size 003D                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0039                       __size_of_CD4021Read 0004  
           ?_TMR0_DefaultInterruptHandler 0039               __size_of_EUSART1_Write_task 0012  
                  __size_of_EUSART1_Write 000A                        _eusart1RxLastError 002B  
                              _MB_handler 0450                           _TMR0_Initialize 04E8  
                       __CFG_T3CMX$PORTC0 000000                               ??_write_ACK 003D  
          __end_of_PIN_MANAGER_Initialize 0450                           _HR_single_write 0310  
                              _HR_handler 0374                         __CFG_FOSC$INTIO67 000000  
                          HR_handler@data 003D  
